<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Challenges & Achievements - Fit-With-AI</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #6C63FF;
            --secondary: #4D44DB;
            --accent: #FF6584;
            --light: #F8F9FA;
            --dark: #343A40;
            --success: #28A745;
            --warning: #FFC107;
            --danger: #DC3545;
            --gray: #6C757D;
            --light-gray: #E9ECEF;
            --gold: #FFD700;
            --silver: #C0C0C0;
            --bronze: #CD7F32;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #F5F7FA;
            color: var(--dark);
            margin: 0;
            padding: 0;
        }
        
        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }
        
        .sidebar {
            width: 250px;
            background: white;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            padding: 2rem 1rem;
        }
        
        .sidebar-header {
            display: flex;
            align-items: center;
            margin-bottom: 2rem;
            padding: 0 1rem;
        }
        
        .sidebar-header img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }
        
        .user-name {
            font-weight: 600;
            margin: 0;
        }
        
        .user-plan {
            font-size: 0.8rem;
            color: var(--primary);
            background: rgba(108, 99, 255, 0.1);
            padding: 2px 8px;
            border-radius: 20px;
            margin-top: 5px;
        }
        
        .nav-menu {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .nav-item {
            margin-bottom: 5px;
        }
        
        .nav-link {
            display: flex;
            align-items: center;
            padding: 12px 1rem;
            color: var(--gray);
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .nav-link:hover, .nav-link.active {
            background: rgba(108, 99, 255, 0.1);
            color: var(--primary);
        }
        
        .nav-link i {
            margin-right: 10px;
            font-size: 1.2rem;
        }        
        .logout-section {
            margin-top: 2rem;
            padding-top: 1rem;
            border-top: 1px solid var(--light-gray);
        }
        
        .logout-link {
            display: flex;
            align-items: center;
            padding: 12px 1rem;
            color: var(--danger);
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        
        .logout-link:hover {
            background: rgba(220, 53, 69, 0.1);
            color: var(--danger);
        }
        
        .logout-link i {
            margin-right: 10px;
            font-size: 1.2rem;
        }
        
        .main-content {
            flex: 1;
            padding: 2rem;
        }
        
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        .page-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: var(--dark);
        }
        
        .stats-overview {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 2rem;
        }
        
        .stat-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.05);
            padding: 1.5rem;
            text-align: center;
        }
        
        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin: 0 auto 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
        }
        
        .stat-icon.gold { background: var(--gold); }
        .stat-icon.silver { background: var(--silver); }
        .stat-icon.bronze { background: var(--bronze); }
        .stat-icon.primary { background: var(--primary); }
        
        .stat-value {
            font-size: 2rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--primary);
        }
        
        .stat-label {
            color: var(--gray);
            font-size: 0.9rem;
        }
        
        .content-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2rem;
        }
        
        .challenges-section {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.05);
            padding: 1.5rem;
        }
        
        .section-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 1.5rem;
        }
        
        .section-title {
            font-size: 1.3rem;
            font-weight: 600;
            margin: 0;
        }
        
        .challenge-tabs {
            display: flex;
            gap: 10px;
            margin-bottom: 1.5rem;
        }
        
        .tab-btn {
            padding: 8px 16px;
            border: none;
            background: var(--light);
            color: var(--gray);
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .tab-btn.active {
            background: var(--primary);
            color: white;
        }
        
        .challenge-card {
            border: 1px solid var(--light-gray);
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
        }
        
        .challenge-card:hover {
            border-color: var(--primary);
            box-shadow: 0 4px 20px rgba(108, 99, 255, 0.1);
        }
        
        .challenge-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }
        
        .challenge-info h3 {
            margin: 0 0 0.5rem 0;
            font-size: 1.1rem;
            font-weight: 600;
        }
        
        .challenge-meta {
            display: flex;
            gap: 15px;
            font-size: 0.85rem;
            color: var(--gray);
        }
        
        .challenge-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .badge-active {
            background: rgba(40, 167, 69, 0.1);
            color: var(--success);
        }
        
        .badge-completed {
            background: rgba(108, 99, 255, 0.1);
            color: var(--primary);
        }
        
        .badge-upcoming {
            background: rgba(255, 193, 7, 0.1);
            color: var(--warning);
        }
        
        .challenge-progress {
            margin: 1rem 0;
        }
        
        .progress-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
            font-size: 0.9rem;
        }
        
        .progress-bar {
            height: 8px;
            background: var(--light-gray);
            border-radius: 4px;
            overflow: hidden;
        }
        
        .progress-fill {
            height: 100%;
            background: var(--primary);
            border-radius: 4px;
            transition: width 0.3s ease;
        }
        
        .challenge-reward {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 1rem;
            padding: 10px;
            background: rgba(255, 213, 0, 0.1);
            border-radius: 8px;
        }
        
        .reward-icon {
            color: var(--gold);
        }
        
        .achievements-sidebar {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.05);
            padding: 1.5rem;
            height: fit-content;
        }
        
        .btn {
            padding: 10px 20px;
            border-radius: 8px;
            font-family: 'Poppins', sans-serif;
            cursor: pointer;
            transition: all 0.3s ease;
            border: none;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }
        
        .btn-primary {
            background: var(--primary);
            color: white;
        }
        
        .btn-outline {
            background: white;
            color: var(--primary);
            border: 1px solid var(--primary);
        }
        
        .btn-success {
            background: var(--success);
            color: white;
        }
        
        .btn-small {
            padding: 6px 12px;
            font-size: 0.85rem;
        }
        
        .loading {
            text-align: center;
            padding: 40px;
            color: var(--gray);
        }
        
        .empty-state {
            text-align: center;
            padding: 40px;
            color: var(--gray);
        }
        
        .quick-actions-sidebar {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }
        
        .action-btn-small {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 8px 12px;
            background: var(--light);
            border: 1px solid var(--light-gray);
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.85rem;
        }
        
        .action-btn-small:hover {
            background: var(--primary);
            color: white;
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }
        
        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 0;
            border-radius: 12px;
            width: 90%;
            max-width: 600px;
            max-height: 80vh;
            overflow-y: auto;
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            border-bottom: 1px solid var(--light-gray);
        }
        
        .modal-header h3 {
            margin: 0;
        }
        
        .close {
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            color: var(--gray);
        }
        
        .close:hover {
            color: var(--dark);
        }
        
        .form-group {
            margin-bottom: 20px;
            padding: 0 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }
        
        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid var(--light-gray);
            border-radius: 8px;
            font-family: 'Poppins', sans-serif;
            box-sizing: border-box;
        }
        
        .form-group input[type="number"] {
            width: 48%;
            display: inline-block;
        }
        
        .form-group select {
            width: 48%;
            display: inline-block;
            margin-left: 4%;
        }
        
        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            padding: 20px;
            border-top: 1px solid var(--light-gray);
        }
        
        @media (max-width: 768px) {
            .dashboard-container {
                flex-direction: column;
            }
            
            .sidebar {
                width: 100%;
                padding: 1rem;
            }
            
            .main-content {
                padding: 1rem;
            }
            
            .content-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-overview {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar Navigation -->
        <div class="sidebar">
            <div class="sidebar-header">
                <img src="https://ui-avatars.com/api/?name=<%= user.fullName %>&background=6C63FF&color=fff" alt="User Avatar">
                <div>
                    <h3 class="user-name"><%= user.fullName %></h3>
                    <span class="user-plan">ID: <%= user.fitnessId %></span>
                </div>
            </div>
            
            <ul class="nav-menu">
                <li class="nav-item"><a href="/dashboard" class="nav-link"><i class="fas fa-home"></i> Dashboard</a></li>
                <li class="nav-item"><a href="/workouts" class="nav-link"><i class="fas fa-dumbbell"></i> Workouts</a></li>
                <li class="nav-item"><a href="/progress" class="nav-link"><i class="fas fa-chart-line"></i> Progress</a></li>
                <li class="nav-item"><a href="/nutrition" class="nav-link"><i class="fas fa-utensils"></i> Nutrition</a></li>
                <li class="nav-item"><a href="/meal-planner" class="nav-link"><i class="fas fa-calendar-check"></i> Meal Planner</a></li>
                <li class="nav-item"><a href="/challenges" class="nav-link active"><i class="fas fa-trophy"></i> Challenges</a></li>
                <li class="nav-item"><a href="/health" class="nav-link"><i class="fas fa-heartbeat"></i> Health Metrics</a></li>
                <li class="nav-item"><a href="/schedule" class="nav-link"><i class="fas fa-calendar-alt"></i> Schedule</a></li>
                <li class="nav-item"><a href="/community" class="nav-link"><i class="fas fa-users"></i> Community</a></li>
                <li class="nav-item"><a href="/ai-coach" class="nav-link"><i class="fas fa-robot"></i> AI Coach</a></li>
                <li class="nav-item"><a href="/settings" class="nav-link"><i class="fas fa-cog"></i> Settings</a></li>
            </ul>
            
            <!-- Logout Section -->
            <div class="logout-section">
                <a href="/logout" class="logout-link" onclick="return confirmLogout()">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </a>
            </div>
        </div>
        
        <!-- Main Content -->
        <div class="main-content">
            <div class="page-header">
                <h1 class="page-title">Challenges & Achievements</h1>
                <div>
                    <button class="btn btn-primary" onclick="showCreateChallengeModal()"><i class="fas fa-plus"></i> Create Challenge</button>
                </div>
            </div>
            
            <div class="stats-overview" id="statsOverview">
                <div class="loading">Loading your stats...</div>
            </div>
            
            <div class="content-grid">
                <div class="challenges-section">
                    <div class="section-header">
                        <h2 class="section-title">Challenges</h2>
                    </div>
                    
                    <div class="challenge-tabs">
                        <button class="tab-btn active" onclick="switchTab('active')">Active</button>
                        <button class="tab-btn" onclick="switchTab('suggested')">Suggested</button>
                        <button class="tab-btn" onclick="switchTab('completed')">Completed</button>
                    </div>
                    
                    <div id="challengesContainer">
                        <div class="loading">Loading challenges...</div>
                    </div>
                </div>
                
                <div class="achievements-sidebar">
                    <h3 class="section-title">Leaderboard</h3>
                    <div id="leaderboard">
                        <div class="loading">Loading leaderboard...</div>
                    </div>
                    
                    <div style="margin-top: 2rem;">
                        <h4>Quick Actions</h4>
                        <div class="quick-actions-sidebar">
                            <button class="action-btn-small" onclick="logWorkout()">
                                <i class="fas fa-dumbbell"></i> Log Workout
                            </button>
                            <button class="action-btn-small" onclick="logWater()">
                                <i class="fas fa-tint"></i> Log Water
                            </button>
                            <button class="action-btn-small" onclick="shareProgress()">
                                <i class="fas fa-share"></i> Share Progress
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Create Challenge Modal -->
    <div id="createChallengeModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Create New Challenge</h3>
                <span class="close" onclick="closeModal('createChallengeModal')">&times;</span>
            </div>
            <form id="createChallengeForm">
                <div class="form-group">
                    <label>Challenge Title</label>
                    <input type="text" id="challengeTitle" maxlength="100" required>
                </div>
                <div class="form-group">
                    <label>Description</label>
                    <textarea id="challengeDescription" rows="3" maxlength="500" required></textarea>
                </div>
                <div class="form-group">
                    <label>Challenge Type</label>
                    <select id="challengeType" required>
                        <option value="workout">Workout Challenge</option>
                        <option value="nutrition">Nutrition Challenge</option>
                        <option value="habit">Habit Challenge</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Target (e.g., 30 days, 100 reps, 2000 calories)</label>
                    <input type="number" id="challengeTarget" required>
                    <select id="challengeUnit" required>
                        <option value="days">Days</option>
                        <option value="reps">Reps</option>
                        <option value="minutes">Minutes</option>
                        <option value="calories">Calories</option>
                        <option value="glasses">Glasses</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Duration</label>
                    <input type="number" id="challengeDuration" value="7" required>
                    <select id="challengeDurationUnit">
                        <option value="days">Days</option>
                        <option value="weeks">Weeks</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Challenge Friend (Fitness ID or Email)</label>
                    <input type="text" id="challengeFriend" placeholder="Enter friend's Fitness ID or email" required>
                </div>
                <div class="form-group">
                    <label>Reward Points</label>
                    <input type="number" id="challengePoints" value="100" min="50" max="1000">
                </div>
                <div class="form-actions">
                    <button type="button" class="btn btn-outline" onclick="closeModal('createChallengeModal')">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create & Send Challenge</button>
                </div>
            </form>
        </div>
    </div>
    
    <script>
        let currentTab = 'active';
        let userStats = null;
        
        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadUserStats();
            loadChallenges('active');
            loadLeaderboard();
        });
        
        // Load user stats
        async function loadUserStats() {
            try {
                const response = await fetch('/api/challenges/stats');
                const data = await response.json();
                
                if (data.success) {
                    userStats = data.stats;
                    displayStats(data.stats);
                } else {
                    console.error('Failed to load stats');
                }
            } catch (error) {
                console.error('Error loading stats:', error);
            }
        }
        
        // Display user stats
        function displayStats(stats) {
            const container = document.getElementById('statsOverview');
            container.innerHTML = `
                <div class="stat-card">
                    <div class="stat-icon gold">
                        <i class="fas fa-trophy"></i>
                    </div>
                    <div class="stat-value">${stats.challengesCompleted}</div>
                    <div class="stat-label">Challenges Completed</div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-icon primary">
                        <i class="fas fa-fire"></i>
                    </div>
                    <div class="stat-value">${stats.currentStreak}</div>
                    <div class="stat-label">Day Streak</div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-icon bronze">
                        <i class="fas fa-medal"></i>
                    </div>
                    <div class="stat-value">${stats.achievementsUnlocked}</div>
                    <div class="stat-label">Achievements Unlocked</div>
                </div>
                
                <div class="stat-card">
                    <div class="stat-icon silver">
                        <i class="fas fa-star"></i>
                    </div>
                    <div class="stat-value">${stats.totalPoints.toLocaleString()}</div>
                    <div class="stat-label">Points Earned</div>
                </div>
            `;
        }
        
        // Switch tabs
        function switchTab(tabName) {
            currentTab = tabName;
            
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');
            
            loadChallenges(tabName);
        }
        
        // Load challenges based on tab
        async function loadChallenges(type) {
            try {
                let endpoint = '/api/challenges/active';
                if (type === 'suggested') endpoint = '/api/challenges/suggested';
                
                const response = await fetch(endpoint);
                const data = await response.json();
                
                if (data.success) {
                    displayChallenges(data.challenges, type);
                } else {
                    console.error('Failed to load challenges');
                }
            } catch (error) {
                console.error('Error loading challenges:', error);
            }
        }
        
        // Display challenges
        function displayChallenges(challenges, type) {
            const container = document.getElementById('challengesContainer');
            
            if (challenges.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-trophy" style="font-size: 3rem; color: var(--gray); margin-bottom: 1rem;"></i>
                        <h3>No ${type} challenges</h3>
                        <p>${type === 'active' ? 'Join some challenges to get started!' : 'Check back later for new challenges.'}</p>
                    </div>
                `;
                return;
            }
            
            container.innerHTML = challenges.map(challenge => `
                <div class="challenge-card" data-challenge-id="${challenge._id}">
                    <div class="challenge-header">
                        <div class="challenge-info">
                            <h3>${challenge.title}</h3>
                            <div class="challenge-meta">
                                ${challenge.daysLeft ? `<span><i class="fas fa-calendar"></i> ${challenge.daysLeft} days left</span>` : ''}
                                <span><i class="fas fa-users"></i> ${challenge.participantCount || 0} participants</span>
                                <span><i class="fas fa-signal"></i> ${challenge.difficulty}</span>
                            </div>
                        </div>
                        <div class="challenge-badge badge-${type === 'suggested' ? 'upcoming' : 'active'}">
                            ${type === 'suggested' ? 'Suggested' : 'Active'}
                        </div>
                    </div>
                    
                    <p>${challenge.description}</p>
                    
                    ${type === 'active' && challenge.userProgress ? `
                        <div class="challenge-progress">
                            <div class="progress-header">
                                <span>Progress: ${challenge.userProgress.current}/${challenge.target.value} ${challenge.target.unit}</span>
                                <span>${Math.round(challenge.userProgress.percentage)}%</span>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: ${challenge.userProgress.percentage}%"></div>
                            </div>
                        </div>
                    ` : ''}
                    
                    <div class="challenge-reward">
                        <i class="fas fa-gift reward-icon"></i>
                        <span>Reward: ${challenge.rewards.points} points${challenge.rewards.badges ? ' + ' + challenge.rewards.badges.join(', ') : ''}</span>
                    </div>
                    
                    <div style="margin-top: 1rem;">
                        ${type === 'active' ? `
                            <button class="btn btn-success btn-small" onclick="logProgress('${challenge._id}', '${challenge.type}')">Log Progress</button>
                            <button class="btn btn-outline btn-small" onclick="viewDetails('${challenge._id}')">View Details</button>
                        ` : `
                            <button class="btn btn-primary btn-small" onclick="joinChallenge('${challenge._id}')">Join Challenge</button>
                            <button class="btn btn-outline btn-small" onclick="viewDetails('${challenge._id}')">View Details</button>
                        `}
                    </div>
                </div>
            `).join('');
        }
        
        // Load leaderboard
        async function loadLeaderboard() {
            try {
                const response = await fetch('/api/challenges/leaderboard?limit=5');
                const data = await response.json();
                
                if (data.success) {
                    displayLeaderboard(data.leaderboard);
                } else {
                    console.error('Failed to load leaderboard');
                }
            } catch (error) {
                console.error('Error loading leaderboard:', error);
            }
        }
        
        // Display leaderboard
        function displayLeaderboard(leaderboard) {
            const container = document.getElementById('leaderboard');
            container.innerHTML = leaderboard.map((user, index) => `
                <div style="display: flex; justify-content: space-between; margin-bottom: 8px; ${user.name === '<%= user.fullName %>' ? 'color: var(--primary); font-weight: 600;' : 'color: var(--gray);'}">
                    <span>${user.rank}. ${user.name}</span>
                    <span>${user.points.toLocaleString()} pts</span>
                </div>
            `).join('');
        }
        
        // Join challenge
        async function joinChallenge(challengeId) {
            try {
                const response = await fetch(`/api/challenges/${challengeId}/join`, {
                    method: 'POST'
                });
                const data = await response.json();
                
                if (data.success) {
                    showNotification('Successfully joined challenge!', 'success');
                    loadChallenges(currentTab);
                    loadUserStats();
                } else {
                    showNotification(data.error, 'error');
                }
            } catch (error) {
                console.error('Join challenge error:', error);
                showNotification('Failed to join challenge', 'error');
            }
        }
        
        // Log progress
        async function logProgress(challengeId, challengeType) {
            const progress = prompt(`Enter your progress (e.g., number of reps, minutes, glasses):`);
            if (!progress || isNaN(progress)) return;
            
            try {
                const response = await fetch(`/api/challenges/${challengeId}/progress`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ progress: parseFloat(progress) })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showNotification('Progress logged successfully!', 'success');
                    loadChallenges(currentTab);
                    loadUserStats();
                } else {
                    showNotification(data.error, 'error');
                }
            } catch (error) {
                console.error('Log progress error:', error);
                showNotification('Failed to log progress', 'error');
            }
        }
        
        // Quick actions
        function logWorkout() {
            window.location.href = '/workouts';
        }
        
        function logWater() {
            window.location.href = '/nutrition';
        }
        
        function shareProgress() {
            if (navigator.share && userStats) {
                navigator.share({
                    title: 'My Fitness Progress',
                    text: `I've completed ${userStats.challengesCompleted} challenges and have a ${userStats.currentStreak}-day streak!`,
                    url: window.location.href
                });
            } else {
                showNotification('Share feature coming soon!', 'info');
            }
        }
        
        function viewDetails(challengeId) {
            showNotification('Challenge details coming soon!', 'info');
        }
        
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.textContent = message;
            notification.style.cssText = `
                position: fixed; top: 20px; right: 20px; padding: 15px 20px;
                border-radius: 8px; color: white; z-index: 10000; font-weight: 500;
                background-color: ${type === 'success' ? '#28A745' : type === 'error' ? '#DC3545' : '#17A2B8'};
            `;
            
            document.body.appendChild(notification);
            setTimeout(() => notification.remove(), 3000);
        }
        
        // Create challenge modal
        function showCreateChallengeModal() {
            document.getElementById('createChallengeModal').style.display = 'block';
        }
        
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }
        
        // Create challenge form
        document.getElementById('createChallengeForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = {
                title: document.getElementById('challengeTitle').value,
                description: document.getElementById('challengeDescription').value,
                type: document.getElementById('challengeType').value,
                target: {
                    value: parseInt(document.getElementById('challengeTarget').value),
                    unit: document.getElementById('challengeUnit').value
                },
                duration: {
                    value: parseInt(document.getElementById('challengeDuration').value),
                    unit: document.getElementById('challengeDurationUnit').value
                },
                friendIdentifier: document.getElementById('challengeFriend').value,
                points: parseInt(document.getElementById('challengePoints').value)
            };
            
            try {
                const response = await fetch('/api/challenges/create', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(formData)
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showNotification('Challenge created and invitation sent!', 'success');
                    closeModal('createChallengeModal');
                    document.getElementById('createChallengeForm').reset();
                    loadChallenges(currentTab);
                } else {
                    showNotification(data.error, 'error');
                }
            } catch (error) {
                console.error('Create challenge error:', error);
                showNotification('Failed to create challenge', 'error');
            }
        });
        
        function confirmLogout() {
            return confirm('Are you sure you want to logout?');
        }
        
        // Close modals when clicking outside
        window.onclick = function(event) {
            const modals = document.querySelectorAll('.modal');
            modals.forEach(modal => {
                if (event.target === modal) {
                    modal.style.display = 'none';
                }
            });
        }
    </script>
    
    <script src="/js/voice-assistant-siri.js"></script>
</body>
</html>