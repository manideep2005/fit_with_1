<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forgot Password - Fit-With-AI</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <style>
        :root {
            --primary: #6C63FF;
            --secondary: #4D44DB;
            --accent: #FF6584;
            --light: #F8F9FA;
            --dark: #343A40;
            --success: #28A745;
            --warning: #FFC107;
            --danger: #DC3545;
            --gray: #6C757D;
            --light-gray: #E9ECEF;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            width: 100%;
            max-width: 450px;
            position: relative;
        }

        .header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            padding: 40px 30px;
            text-align: center;
            position: relative;
        }

        .header::before {
            content: '';
            position: absolute;
            bottom: -20px;
            left: 50%;
            transform: translateX(-50%);
            width: 40px;
            height: 40px;
            background: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .header-icon {
            font-size: 3rem;
            margin-bottom: 20px;
            opacity: 0.9;
        }

        .header h1 {
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .header p {
            opacity: 0.9;
            font-size: 1rem;
            line-height: 1.5;
        }

        .content {
            padding: 50px 30px 30px;
        }

        .step {
            display: none;
            animation: fadeIn 0.5s ease-in-out;
        }

        .step.active {
            display: block;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .step-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--dark);
            margin-bottom: 10px;
            text-align: center;
        }

        .step-description {
            color: var(--gray);
            text-align: center;
            margin-bottom: 30px;
            line-height: 1.6;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            color: var(--dark);
            font-weight: 500;
            font-size: 0.95rem;
        }

        .form-input {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid var(--light-gray);
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: var(--light);
        }

        .form-input:focus {
            outline: none;
            border-color: var(--primary);
            background: white;
            box-shadow: 0 0 0 3px rgba(108, 99, 255, 0.1);
        }

        .otp-inputs {
            display: flex;
            gap: 15px;
            justify-content: center;
            margin-bottom: 25px;
        }

        .otp-input {
            width: 50px;
            height: 50px;
            text-align: center;
            font-size: 1.5rem;
            font-weight: 600;
            border: 2px solid var(--light-gray);
            border-radius: 12px;
            background: var(--light);
            transition: all 0.3s ease;
        }

        .otp-input:focus {
            outline: none;
            border-color: var(--primary);
            background: white;
            box-shadow: 0 0 0 3px rgba(108, 99, 255, 0.1);
        }

        .form-btn {
            width: 100%;
            padding: 15px;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            border: none;
            border-radius: 12px;
            color: white;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .form-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(108, 99, 255, 0.3);
        }

        .form-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .form-btn .spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 10px;
        }

        .form-btn.loading .spinner {
            display: inline-block;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .back-btn {
            background: transparent;
            border: 2px solid var(--primary);
            color: var(--primary);
            margin-bottom: 15px;
        }

        .back-btn:hover {
            background: var(--primary);
            color: white;
        }

        .footer-links {
            text-align: center;
            margin-top: 25px;
            padding-top: 25px;
            border-top: 1px solid var(--light-gray);
        }

        .footer-links a {
            color: var(--primary);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .footer-links a:hover {
            color: var(--secondary);
        }

        .alert {
            padding: 15px 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            font-weight: 500;
            display: none;
        }

        .alert.success {
            background: rgba(40, 167, 69, 0.1);
            color: var(--success);
            border: 1px solid rgba(40, 167, 69, 0.2);
        }

        .alert.error {
            background: rgba(220, 53, 69, 0.1);
            color: var(--danger);
            border: 1px solid rgba(220, 53, 69, 0.2);
        }

        .alert.warning {
            background: rgba(255, 193, 7, 0.1);
            color: #856404;
            border: 1px solid rgba(255, 193, 7, 0.2);
        }

        .resend-timer {
            text-align: center;
            margin-top: 20px;
            color: var(--gray);
            font-size: 0.9rem;
        }

        .resend-btn {
            background: none;
            border: none;
            color: var(--primary);
            cursor: pointer;
            font-weight: 500;
            text-decoration: underline;
        }

        .resend-btn:disabled {
            color: var(--gray);
            cursor: not-allowed;
            text-decoration: none;
        }

        .password-strength {
            margin-top: 10px;
            font-size: 0.85rem;
        }

        .strength-bar {
            height: 4px;
            background: var(--light-gray);
            border-radius: 2px;
            margin: 8px 0;
            overflow: hidden;
        }

        .strength-fill {
            height: 100%;
            transition: all 0.3s ease;
            border-radius: 2px;
        }

        .strength-weak .strength-fill {
            width: 33%;
            background: var(--danger);
        }

        .strength-medium .strength-fill {
            width: 66%;
            background: var(--warning);
        }

        .strength-strong .strength-fill {
            width: 100%;
            background: var(--success);
        }

        @media (max-width: 480px) {
            .container {
                margin: 10px;
            }
            
            .content {
                padding: 40px 20px 20px;
            }
            
            .otp-inputs {
                gap: 10px;
            }
            
            .otp-input {
                width: 45px;
                height: 45px;
                font-size: 1.3rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="header-icon">
                <i class="fas fa-lock"></i>
            </div>
            <h1>Reset Password</h1>
            <p>Don't worry, we'll help you get back into your account</p>
        </div>

        <div class="content">
            <!-- Step 1: Email Input -->
            <div class="step active" id="step1">
                <h2 class="step-title">Enter Your Email</h2>
                <p class="step-description">We'll send you a verification code to reset your password</p>
                
                <div class="alert" id="alert"></div>
                
                <form id="emailForm">
                    <div class="form-group">
                        <label for="email" class="form-label">Email Address</label>
                        <input type="email" id="email" class="form-input" placeholder="Enter your email address" required>
                    </div>
                    <button type="submit" class="form-btn" id="sendCodeBtn">
                        <span class="spinner"></span>
                        Send Reset Code
                    </button>
                </form>
                
                <div class="footer-links">
                    <a href="/">← Back to Sign In</a>
                </div>
            </div>

            <!-- Step 2: OTP Verification -->
            <div class="step" id="step2">
                <h2 class="step-title">Enter Verification Code</h2>
                <p class="step-description">We've sent a 6-digit code to <span id="emailDisplay"></span></p>
                
                <div class="alert" id="alert2"></div>
                
                <form id="otpForm">
                    <div class="otp-inputs">
                        <input type="text" class="otp-input" maxlength="1" pattern="[0-9]">
                        <input type="text" class="otp-input" maxlength="1" pattern="[0-9]">
                        <input type="text" class="otp-input" maxlength="1" pattern="[0-9]">
                        <input type="text" class="otp-input" maxlength="1" pattern="[0-9]">
                        <input type="text" class="otp-input" maxlength="1" pattern="[0-9]">
                        <input type="text" class="otp-input" maxlength="1" pattern="[0-9]">
                    </div>
                    
                    <button type="submit" class="form-btn" id="verifyCodeBtn">
                        <span class="spinner"></span>
                        Verify Code
                    </button>
                    
                    <button type="button" class="form-btn back-btn" onclick="goToStep(1)">
                        ← Back to Email
                    </button>
                </form>
                
                <div class="resend-timer">
                    <span id="timerText">Didn't receive the code? </span>
                    <button class="resend-btn" id="resendBtn" onclick="resendCode()">Resend Code</button>
                    <div id="countdown" style="display: none;">Resend available in <span id="countdownTime">60</span>s</div>
                </div>
            </div>

            <!-- Step 3: New Password -->
            <div class="step" id="step3">
                <h2 class="step-title">Create New Password</h2>
                <p class="step-description">Choose a strong password for your account</p>
                
                <div class="alert" id="alert3"></div>
                
                <form id="passwordForm">
                    <div class="form-group">
                        <label for="newPassword" class="form-label">New Password</label>
                        <input type="password" id="newPassword" class="form-input" placeholder="Enter new password" required>
                        <div class="password-strength" id="passwordStrength">
                            <div class="strength-bar">
                                <div class="strength-fill"></div>
                            </div>
                            <span class="strength-text">Password strength</span>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="confirmPassword" class="form-label">Confirm Password</label>
                        <input type="password" id="confirmPassword" class="form-input" placeholder="Confirm new password" required>
                    </div>
                    
                    <button type="submit" class="form-btn" id="resetPasswordBtn">
                        <span class="spinner"></span>
                        Reset Password
                    </button>
                </form>
            </div>

            <!-- Step 4: Success -->
            <div class="step" id="step4">
                <div style="text-align: center;">
                    <div style="font-size: 4rem; color: var(--success); margin-bottom: 20px;">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <h2 class="step-title">Password Reset Successful!</h2>
                    <p class="step-description">Your password has been successfully reset. You can now sign in with your new password.</p>
                    
                    <button class="form-btn" onclick="window.location.href='/'">
                        Sign In Now
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentStep = 1;
        let userEmail = '';
        let resendTimer = null;
        let countdownInterval = null;

        // Step navigation
        function goToStep(step) {
            document.querySelectorAll('.step').forEach(s => s.classList.remove('active'));
            document.getElementById(`step${step}`).classList.add('active');
            currentStep = step;
        }

        // Show alert
        function showAlert(message, type = 'error', stepNum = currentStep) {
            const alert = document.getElementById(`alert${stepNum > 1 ? stepNum : ''}`);
            alert.className = `alert ${type}`;
            alert.textContent = message;
            alert.style.display = 'block';
            
            // Auto hide success messages
            if (type === 'success') {
                setTimeout(() => {
                    alert.style.display = 'none';
                }, 5000);
            }
        }

        // Hide alert
        function hideAlert(stepNum = currentStep) {
            const alert = document.getElementById(`alert${stepNum > 1 ? stepNum : ''}`);
            alert.style.display = 'none';
        }

        // Set button loading state
        function setButtonLoading(buttonId, loading) {
            const button = document.getElementById(buttonId);
            if (loading) {
                button.classList.add('loading');
                button.disabled = true;
            } else {
                button.classList.remove('loading');
                button.disabled = false;
            }
        }

        // Email form submission
        document.getElementById('emailForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const email = document.getElementById('email').value.trim();
            if (!email) {
                showAlert('Please enter your email address');
                return;
            }

            setButtonLoading('sendCodeBtn', true);
            hideAlert();

            try {
                const response = await fetch('/forgot-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email })
                });

                const data = await response.json();

                if (data.success) {
                    userEmail = email;
                    document.getElementById('emailDisplay').textContent = email;
                    showAlert(data.message, 'success');
                    setTimeout(() => {
                        goToStep(2);
                        startResendTimer();
                    }, 2000);
                } else {
                    showAlert(data.error || 'Failed to send reset code');
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('Network error. Please try again.');
            } finally {
                setButtonLoading('sendCodeBtn', false);
            }
        });

        // OTP input handling
        document.querySelectorAll('.otp-input').forEach((input, index) => {
            input.addEventListener('input', function(e) {
                if (e.target.value.length === 1) {
                    if (index < 5) {
                        document.querySelectorAll('.otp-input')[index + 1].focus();
                    }
                }
            });

            input.addEventListener('keydown', function(e) {
                if (e.key === 'Backspace' && e.target.value === '' && index > 0) {
                    document.querySelectorAll('.otp-input')[index - 1].focus();
                }
            });

            input.addEventListener('paste', function(e) {
                e.preventDefault();
                const paste = e.clipboardData.getData('text');
                if (paste.length === 6 && /^\d{6}$/.test(paste)) {
                    document.querySelectorAll('.otp-input').forEach((inp, i) => {
                        inp.value = paste[i] || '';
                    });
                }
            });
        });

        // OTP form submission
        document.getElementById('otpForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const otpInputs = document.querySelectorAll('.otp-input');
            const otp = Array.from(otpInputs).map(input => input.value).join('');
            
            if (otp.length !== 6) {
                showAlert('Please enter the complete 6-digit code', 'error', 2);
                return;
            }

            setButtonLoading('verifyCodeBtn', true);
            hideAlert(2);

            try {
                const response = await fetch('/verify-reset-otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ otp, email: userEmail })
                });

                const data = await response.json();

                if (data.success) {
                    showAlert(data.message, 'success', 2);
                    setTimeout(() => {
                        goToStep(3);
                    }, 1500);
                } else {
                    showAlert(data.error || 'Invalid verification code', 'error', 2);
                    if (data.attemptsLeft !== undefined) {
                        showAlert(`${data.error} (${data.attemptsLeft} attempts left)`, 'warning', 2);
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('Network error. Please try again.', 'error', 2);
            } finally {
                setButtonLoading('verifyCodeBtn', false);
            }
        });

        // Password strength checker
        function checkPasswordStrength(password) {
            const strengthElement = document.getElementById('passwordStrength');
            const strengthText = strengthElement.querySelector('.strength-text');
            
            let score = 0;
            if (password.length >= 8) score++;
            if (/[a-z]/.test(password)) score++;
            if (/[A-Z]/.test(password)) score++;
            if (/[0-9]/.test(password)) score++;
            if (/[^A-Za-z0-9]/.test(password)) score++;

            strengthElement.className = 'password-strength';
            
            if (score < 3) {
                strengthElement.classList.add('strength-weak');
                strengthText.textContent = 'Weak password';
            } else if (score < 4) {
                strengthElement.classList.add('strength-medium');
                strengthText.textContent = 'Medium strength';
            } else {
                strengthElement.classList.add('strength-strong');
                strengthText.textContent = 'Strong password';
            }
        }

        document.getElementById('newPassword').addEventListener('input', function(e) {
            checkPasswordStrength(e.target.value);
        });

        // Password form submission
        document.getElementById('passwordForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (newPassword.length < 6) {
                showAlert('Password must be at least 6 characters long', 'error', 3);
                return;
            }
            
            if (newPassword !== confirmPassword) {
                showAlert('Passwords do not match', 'error', 3);
                return;
            }

            setButtonLoading('resetPasswordBtn', true);
            hideAlert(3);

            try {
                const response = await fetch('/reset-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        newPassword, 
                        confirmPassword,
                        email: userEmail
                    })
                });

                const data = await response.json();

                if (data.success) {
                    goToStep(4);
                } else {
                    showAlert(data.error || 'Failed to reset password', 'error', 3);
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('Network error. Please try again.', 'error', 3);
            } finally {
                setButtonLoading('resetPasswordBtn', false);
            }
        });

        // Resend code functionality
        function startResendTimer() {
            let timeLeft = 60;
            document.getElementById('resendBtn').disabled = true;
            document.getElementById('timerText').style.display = 'none';
            document.getElementById('countdown').style.display = 'block';
            
            countdownInterval = setInterval(() => {
                timeLeft--;
                document.getElementById('countdownTime').textContent = timeLeft;
                
                if (timeLeft <= 0) {
                    clearInterval(countdownInterval);
                    document.getElementById('resendBtn').disabled = false;
                    document.getElementById('timerText').style.display = 'inline';
                    document.getElementById('countdown').style.display = 'none';
                }
            }, 1000);
        }

        async function resendCode() {
            if (!userEmail) return;
            
            try {
                const response = await fetch('/forgot-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email: userEmail })
                });

                const data = await response.json();
                
                if (data.success) {
                    showAlert('New verification code sent!', 'success', 2);
                    startResendTimer();
                    // Clear OTP inputs
                    document.querySelectorAll('.otp-input').forEach(input => input.value = '');
                } else {
                    showAlert(data.error || 'Failed to resend code', 'error', 2);
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('Network error. Please try again.', 'error', 2);
            }
        }

        // Auto-focus first input on page load
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('email').focus();
        });
    </script>
</body>
</html>