<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Workouts - Fit-With-AI</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #6C63FF;
            --secondary: #4D44DB;
            --accent: #FF6584;
            --light: #F8F9FA;
            --dark: #343A40;
            --success: #28A745;
            --warning: #FFC107;
            --danger: #DC3545;
            --gray: #6C757D;
            --light-gray: #E9ECEF;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #F5F7FA;
            color: var(--dark);
            margin: 0;
            padding: 0;
        }
        
        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }
        
        .sidebar {
            width: 250px;
            background: white;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            padding: 2rem 1rem;
        }
        
        .sidebar-header {
            display: flex;
            align-items: center;
            margin-bottom: 2rem;
            padding: 0 1rem;
        }
        
        .sidebar-header img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }
        
        .user-name {
            font-weight: 600;
            margin: 0;
        }
        
        .user-plan {
            font-size: 0.8rem;
            color: var(--primary);
            background: rgba(108, 99, 255, 0.1);
            padding: 2px 8px;
            border-radius: 20px;
            margin-top: 5px;
        }
        
        .nav-menu {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .nav-item {
            margin-bottom: 5px;
        }
        
        .nav-link {
            display: flex;
            align-items: center;
            padding: 12px 1rem;
            color: var(--gray);
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .nav-link:hover, .nav-link.active {
            background: rgba(108, 99, 255, 0.1);
            color: var(--primary);
        }
        
        .nav-link i {
            margin-right: 10px;
            font-size: 1.2rem;
        }        
        .logout-section {
            margin-top: 2rem;
            padding-top: 1rem;
            border-top: 1px solid var(--light-gray);
        }
        
        .logout-link {
            display: flex;
            align-items: center;
            padding: 12px 1rem;
            color: var(--danger);
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        
        .logout-link:hover {
            background: rgba(220, 53, 69, 0.1);
            color: var(--danger);
        }
        
        .logout-link i {
            margin-right: 10px;
            font-size: 1.2rem;
        }
        
        .main-content {
            flex: 1;
            padding: 2rem;
        }
        
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        .page-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: var(--dark);
        }
        
        .search-filter {
            display: flex;
            gap: 15px;
        }
        
        .search-bar {
            display: flex;
            align-items: center;
            background: white;
            padding: 0 15px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
            width: 250px;
        }
        
        .search-bar input {
            border: none;
            outline: none;
            padding: 10px;
            flex: 1;
            font-family: 'Poppins', sans-serif;
        }
        
        .filter-btn {
            background: white;
            border: none;
            padding: 0 15px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .workout-categories {
            display: flex;
            gap: 15px;
            margin-bottom: 2rem;
            overflow-x: auto;
            padding-bottom: 10px;
        }
        
        .category-btn {
            padding: 8px 20px;
            border-radius: 20px;
            background: var(--light-gray);
            border: none;
            font-family: 'Poppins', sans-serif;
            cursor: pointer;
            white-space: nowrap;
        }
        
        .category-btn.active {
            background: var(--primary);
            color: white;
        }
        
        .workout-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .workout-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
            transition: transform 0.3s ease;
        }
        
        .workout-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        
        .workout-image {
            height: 180px;
            background-color: var(--light-gray);
            background-size: cover;
            background-position: center;
        }
        
        .workout-content {
            padding: 1.5rem;
        }
        
        .workout-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin: 0 0 5px 0;
        }
        
        .workout-meta {
            display: flex;
            gap: 15px;
            margin-bottom: 8px;
            font-size: 0.9rem;
            color: var(--gray);
        }

        .channel-info {
            font-size: 0.8rem;
            color: var(--primary);
            margin-bottom: 10px;
            font-weight: 500;
        }

        .channel-info i {
            margin-right: 5px;
        }
        
        .workout-desc {
            color: var(--gray);
            font-size: 0.9rem;
            margin-bottom: 1.5rem;
        }
        
        .workout-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .difficulty {
            font-size: 0.8rem;
            padding: 4px 12px;
            border-radius: 20px;
        }
        
        .beginner {
            background: rgba(40, 167, 69, 0.1);
            color: var(--success);
        }
        
        .intermediate {
            background: rgba(255, 193, 7, 0.1);
            color: var(--warning);
        }
        
        .advanced {
            background: rgba(220, 53, 69, 0.1);
            color: var(--danger);
        }
        
        .btn {
            padding: 8px 16px;
            border-radius: 8px;
            font-family: 'Poppins', sans-serif;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .btn-primary {
            background: var(--primary);
            color: white;
            border: none;
        }
        
        .btn-primary:hover {
            background: var(--secondary);
        }
        
        .btn-outline {
            background: white;
            color: var(--primary);
            border: 1px solid var(--primary);
        }

        /* Gamification Bar Styles */
        .gamification-bar {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            border-radius: 16px;
            padding: 20px;
            margin-bottom: 2rem;
            color: white;
            box-shadow: 0 8px 32px rgba(108, 99, 255, 0.3);
        }

        .gamification-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .stat-item {
            display: flex;
            align-items: center;
            gap: 12px;
            background: rgba(255, 255, 255, 0.1);
            padding: 15px;
            border-radius: 12px;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .stat-item:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-2px);
        }

        .stat-icon {
            font-size: 1.8rem;
            line-height: 1;
        }

        .stat-info {
            flex: 1;
        }

        .stat-label {
            font-size: 0.8rem;
            opacity: 0.8;
            margin-bottom: 2px;
        }

        .stat-value {
            font-size: 1.2rem;
            font-weight: 600;
            line-height: 1;
        }

        .xp-progress {
            position: relative;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            height: 12px;
            overflow: hidden;
        }

        .xp-progress-bar {
            background: rgba(255, 255, 255, 0.8);
            height: 100%;
            border-radius: 10px;
            width: 0%;
            transition: width 0.5s ease;
            position: relative;
        }

        .xp-progress-bar::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
            animation: shimmer 2s infinite;
        }

        @keyframes shimmer {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }

        .xp-progress-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 0.8rem;
            font-weight: 500;
            text-shadow: 0 1px 2px rgba(0,0,0,0.3);
        }

        /* Enhanced Workout Cards with XP Preview */
        .workout-card {
            position: relative;
            overflow: visible;
        }

        .workout-card::before {
            content: '';
            position: absolute;
            top: -2px;
            left: -2px;
            right: -2px;
            bottom: -2px;
            background: linear-gradient(45deg, var(--primary), var(--accent), var(--success));
            border-radius: 14px;
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: -1;
        }

        .workout-card:hover::before {
            opacity: 0.3;
        }

        .xp-reward {
            position: absolute;
            top: 15px;
            right: 15px;
            background: linear-gradient(135deg, #FFD700, #FFA500);
            color: #333;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            box-shadow: 0 4px 12px rgba(255, 215, 0, 0.4);
            z-index: 2;
        }

        .workout-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: relative;
        }

        .start-workout-btn {
            position: relative;
            overflow: hidden;
        }

        .start-workout-btn::after {
            content: '🎯 +50 XP';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, var(--success), #20c997);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            transform: translateY(100%);
            transition: transform 0.3s ease;
            font-size: 0.9rem;
            font-weight: 600;
        }

        .start-workout-btn:hover::after {
            transform: translateY(0);
        }

        /* Video overlay for YouTube indicator */
        .video-overlay {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.7);
            padding: 10px;
            border-radius: 50%;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .workout-card:hover .video-overlay {
            opacity: 1;
        }

        /* Search result specific styles */
        .search-result {
            animation: fadeInUp 0.5s ease forwards;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Enhanced search bar */
        .search-bar {
            position: relative;
        }

        .search-bar::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 15px;
            right: 15px;
            height: 2px;
            background: var(--primary);
            transform: scaleX(0);
            transition: transform 0.3s ease;
        }

        .search-bar:focus-within::after {
            transform: scaleX(1);
        }

        .search-bar input:focus {
            outline: none;
        }
        
        /* Video Modal Styles */
        .video-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
        }
        
        .video-modal-content {
            position: relative;
            background-color: white;
            margin: 2% auto;
            padding: 0;
            width: 90%;
            max-width: 900px;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 20px 40px rgba(0,0,0,0.3);
        }
        
        .video-modal-header {
            padding: 1.5rem;
            background: var(--primary);
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .video-modal-title {
            margin: 0;
            font-size: 1.5rem;
            font-weight: 600;
        }
        
        .close-modal {
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: background-color 0.3s ease;
        }
        
        .close-modal:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }
        
        .video-container {
            position: relative;
            width: 100%;
            height: 500px;
            background: #000;
        }
        
        .workout-video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .video-controls {
            padding: 1.5rem;
            background: white;
        }
        
        .workout-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }
        
        .workout-stats {
            display: flex;
            gap: 20px;
            font-size: 0.9rem;
            color: var(--gray);
        }
        
        .video-progress {
            width: 100%;
            height: 6px;
            background: var(--light-gray);
            border-radius: 3px;
            margin-bottom: 1rem;
            overflow: hidden;
        }
        
        .video-progress-bar {
            height: 100%;
            background: var(--primary);
            width: 0%;
            transition: width 0.3s ease;
        }
        
        .video-actions {
            display: flex;
            gap: 10px;
            justify-content: center;
        }
        
        .video-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-family: 'Poppins', sans-serif;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .video-btn-primary {
            background: var(--primary);
            color: white;
        }
        
        .video-btn-primary:hover {
            background: var(--secondary);
        }
        
        .video-btn-secondary {
            background: var(--light-gray);
            color: var(--dark);
        }
        
        .video-btn-secondary:hover {
            background: var(--gray);
            color: white;
        }
        
        @media (max-width: 768px) {
            .dashboard-container {
                flex-direction: column;
            }
            
            .sidebar {
                width: 100%;
                padding: 1rem;
            }
            
            .main-content {
                padding: 1rem;
            }
            
            .page-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
            
            .search-filter {
                width: 100%;
            }
            
            .search-bar {
                width: 100%;
            }
            
            .workout-grid {
                grid-template-columns: 1fr;
            }
            
            .video-modal-content {
                width: 95%;
                margin: 5% auto;
            }
            
            .video-container {
                height: 300px;
            }
            
            .video-actions {
                flex-direction: column;
            }
            
            .video-btn {
                width: 100%;
                justify-content: center;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/css/voice-assistant.css">
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar Navigation -->
        <%- include('partials/sidebar', { currentPage: 'workouts' }) %>
        <div class="sidebar" style="display: none;">
            <div class="sidebar-header">
                <img src="https://ui-avatars.com/api/?name=<%= user.fullName %>&background=6C63FF&color=fff" alt="User Avatar">
                <div>
                    <h3 class="user-name"><%= user.fullName %></h3>
                    <span class="user-plan">Premium Plan</span>
                </div>
            </div>
            
              <ul class="nav-menu">
                <li class="nav-item"><a href="/dashboard?token=<%= navToken %>" class="nav-link"><i class="fas fa-home"></i> Dashboard</a></li>
                <li class="nav-item"><a href="/workouts?token=<%= navToken %>" class="nav-link active"><i class="fas fa-dumbbell"></i> Workouts</a></li>
                <li class="nav-item"><a href="/progress?token=<%= navToken %>" class="nav-link"><i class="fas fa-chart-line"></i> Progress</a></li>
                <li class="nav-item"><a href="/nutrition?token=<%= navToken %>" class="nav-link"><i class="fas fa-utensils"></i> Nutrition</a></li>
                <li class="nav-item"><a href="/meal-planner?token=<%= navToken %>" class="nav-link"><i class="fas fa-calendar-check"></i> Meal Planner</a></li>
                <li class="nav-item"><a href="/challenges?token=<%= navToken %>" class="nav-link"><i class="fas fa-trophy"></i> Challenges</a></li>
                <li class="nav-item"><a href="/health?token=<%= navToken %>" class="nav-link"><i class="fas fa-heartbeat"></i> Health Metrics</a></li>
                <li class="nav-item"><a href="/biometrics?token=<%= navToken %>" class="nav-link"><i class="fas fa-chart-bar"></i> Biometrics</a></li>
                <li class="nav-item"><a href="/schedule?token=<%= navToken %>" class="nav-link"><i class="fas fa-calendar-alt"></i> Schedule</a></li>
                <li class="nav-item"><a href="/community?token=<%= navToken %>" class="nav-link"><i class="fas fa-users"></i> Community</a></li>
                <li class="nav-item"><a href="/ai-coach?token=<%= navToken %>" class="nav-link"><i class="fas fa-robot"></i> AI Coach</a></li>
                <li class="nav-item"><a href="/settings?token=<%= navToken %>" class="nav-link"><i class="fas fa-cog"></i> Settings</a></li>            
            </div>
        </div>
        
        <!-- Main Content -->
        <div class="main-content">
            <div class="page-header">
                <h1 class="page-title">Workout Plans</h1>
                <div class="search-filter">
                    <div class="search-bar">
                        <i class="fas fa-search"></i>
                        <input type="text" placeholder="Search workouts...">
                    </div>
                    <button class="filter-btn">
                        <i class="fas fa-sliders-h"></i>
                        <span>Filters</span>
                    </button>
                </div>
            </div>

            <!-- Gamification Stats Bar -->
            <div class="gamification-bar">
                <div class="gamification-stats">
                    <div class="stat-item">
                        <div class="stat-icon">🏆</div>
                        <div class="stat-info">
                            <div class="stat-label">Level</div>
                            <div class="stat-value" id="userLevel">1</div>
                        </div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-icon">⚡</div>
                        <div class="stat-info">
                            <div class="stat-label">XP</div>
                            <div class="stat-value" id="userXP">0</div>
                        </div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-icon">🔥</div>
                        <div class="stat-info">
                            <div class="stat-label">Streak</div>
                            <div class="stat-value" id="workoutStreak">0</div>
                        </div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-icon">🎯</div>
                        <div class="stat-info">
                            <div class="stat-label">Today's Goal</div>
                            <div class="stat-value" id="todayGoal">0/1</div>
                        </div>
                    </div>
                </div>
                <div class="xp-progress">
                    <div class="xp-progress-bar" id="xpProgressBar"></div>
                    <div class="xp-progress-text" id="xpProgressText">0 XP to next level</div>
                </div>
            </div>
            
            <div class="workout-categories">
                <button class="category-btn active">All</button>
                <button class="category-btn">Strength</button>
                <button class="category-btn">Cardio</button>
                <button class="category-btn">HIIT</button>
                <button class="category-btn">Yoga</button>
                <button class="category-btn">Recovery</button>
                <button class="category-btn">Custom</button>
            </div>
            
            <div class="workout-grid" id="workoutGrid">
                <!-- Workouts will be loaded dynamically -->
            </div>
        </div>
    </div>

    <!-- Video Modal -->
    <div id="videoModal" class="video-modal">
        <div class="video-modal-content">
            <div class="video-modal-header">
                <h2 id="modalWorkoutTitle" class="video-modal-title">Workout Video</h2>
                <button class="close-modal" id="closeModal">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            
            <div class="video-container">
                <video id="workoutVideo" class="workout-video" controls style="display: none;">
                    <source src="" type="video/mp4">
                    Your browser does not support the video tag.
                </video>
                <iframe id="youtubePlayer" style="width: 100%; height: 100%; border: none; display: none;" 
                        frameborder="0" allowfullscreen>
                </iframe>
            </div>
            
            <div class="video-controls">
                <div class="workout-info">
                    <div>
                        <h3 id="modalWorkoutName">Workout Name</h3>
                        <div class="workout-stats">
                            <span id="modalDuration"><i class="far fa-clock"></i> 0 min</span>
                            <span id="modalCalories"><i class="fas fa-fire"></i> 0 cal</span>
                        </div>
                    </div>
                </div>
                
                <div class="video-progress">
                    <div class="video-progress-bar" id="progressBar"></div>
                </div>
                
                <div class="video-actions">
                    <button class="video-btn video-btn-primary" id="playPauseBtn">
                        <i class="fas fa-play"></i>
                        <span>Play</span>
                    </button>
                    <button class="video-btn video-btn-secondary" id="restartBtn">
                        <i class="fas fa-redo"></i>
                        <span>Restart</span>
                    </button>
                    <button class="video-btn video-btn-secondary" id="fullscreenBtn">
                        <i class="fas fa-expand"></i>
                        <span>Fullscreen</span>
                    </button>
                    <button class="video-btn" id="completeWorkoutBtn" style="background: linear-gradient(135deg, var(--success), #20c997); color: white; margin-left: auto;">
                        <i class="fas fa-trophy"></i>
                        <span>Complete Workout</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Global variables for current workout
        let currentWorkout = null;

        // Video Modal Functionality
        const videoModal = document.getElementById('videoModal');
        const workoutVideo = document.getElementById('workoutVideo');
        const modalWorkoutTitle = document.getElementById('modalWorkoutTitle');
        const modalWorkoutName = document.getElementById('modalWorkoutName');
        const modalDuration = document.getElementById('modalDuration');
        const modalCalories = document.getElementById('modalCalories');
        const closeModal = document.getElementById('closeModal');
        const playPauseBtn = document.getElementById('playPauseBtn');
        const restartBtn = document.getElementById('restartBtn');
        const fullscreenBtn = document.getElementById('fullscreenBtn');
        const completeWorkoutBtn = document.getElementById('completeWorkoutBtn');
        const progressBar = document.getElementById('progressBar');

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadGamificationData();
            showDefaultWorkouts(); // Load default workouts on page load
        });

        // Load gamification data
        async function loadGamificationData() {
            try {
                const response = await fetch('/api/gamification-data');
                const result = await response.json();
                
                if (result.success) {
                    updateGamificationDisplay(result.data);
                } else {
                    console.error('Failed to load gamification data:', result.error);
                    // Show default values if loading fails
                    updateGamificationDisplay({
                        level: 1,
                        totalXP: 0,
                        progressToNextLevel: 0,
                        xpToNextLevel: 100,
                        streaks: { workout: { current: 0 } }
                    });
                }
            } catch (error) {
                console.error('Error loading gamification data:', error);
                // Show default values if error occurs
                updateGamificationDisplay({
                    level: 1,
                    totalXP: 0,
                    progressToNextLevel: 0,
                    xpToNextLevel: 100,
                    streaks: { workout: { current: 0 } }
                });
            }
        }

        // Update gamification display
        function updateGamificationDisplay(data) {
            console.log("Updating gamification display with:", data);
            
            // Safely update each element
            const userLevel = document.getElementById('userLevel');
            if (userLevel) userLevel.textContent = data.level || 1;
            
            const userXP = document.getElementById('userXP');
            if (userXP) userXP.textContent = (data.totalXP || 0).toLocaleString();
            
            const workoutStreak = document.getElementById('workoutStreak');
            if (workoutStreak) workoutStreak.textContent = data.streaks?.workout?.current || 0;
            
            // Calculate today's workout goal progress
            const todayWorkouts = 0; // This would come from today's data
            const goalWorkouts = 1;
            const todayGoal = document.getElementById('todayGoal');
            if (todayGoal) todayGoal.textContent = `${todayWorkouts}/${goalWorkouts}`;
            
            // Update XP progress bar
            const progressPercent = data.progressToNextLevel || 0;
            const xpProgressBar = document.getElementById('xpProgressBar');
            if (xpProgressBar) xpProgressBar.style.width = `${progressPercent}%`;
            
            const xpProgressText = document.getElementById('xpProgressText');
            if (xpProgressText) xpProgressText.textContent = `${data.xpToNextLevel || 0} XP to next level`;
        }

        // Complete workout function
        async function completeWorkout() {
            if (!currentWorkout) return;

            try {
                const workoutData = {
                    type: currentWorkout.title,
                    duration: parseInt(currentWorkout.duration.replace(/\D/g, '')),
                    calories: parseInt(currentWorkout.calories.replace(/\D/g, '')),
                    notes: `Completed ${currentWorkout.title} workout via YouTube`,
                    source: 'youtube',
                    videoId: currentWorkout.videoId
                };

                const response = await fetch('/api/workouts', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(workoutData)
                });

                const result = await response.json();
                
                if (result.success) {
                    // Show success notification with XP
                    const xpEarned = currentWorkout.xpReward || 50;
                    showNotification(`Workout completed! +${xpEarned} XP earned! 🎉`, 'success');
                    
                    // Show gamification notifications
                    console.log("Workout result:", result); if (result.gamification) {
                        showGamificationNotifications(result.gamification);
                    }
                    
                    // Refresh gamification data
                    console.log("Loading gamification data..."); await loadGamificationData();
                    
                    // Close modal
                    closeVideoModal();
                } else {
                    showNotification('Failed to log workout: ' + result.error, 'error');
                }
            } catch (error) {
                console.error('Error completing workout:', error);
                showNotification('Error completing workout. Please try again.', 'error');
            }
        }

        
        // Complete workout button event listener
        completeWorkoutBtn.addEventListener('click', completeWorkout);

        // Close modal functionality
        function closeVideoModal() {
            videoModal.style.display = 'none';
            document.body.style.overflow = 'auto';
            workoutVideo.pause();
            workoutVideo.currentTime = 0;
            progressBar.style.width = '0%';
            playPauseBtn.innerHTML = '<i class="fas fa-play"></i><span>Play</span>';
        }

        closeModal.addEventListener('click', closeVideoModal);

        // Close modal when clicking outside
        videoModal.addEventListener('click', function(e) {
            if (e.target === videoModal) {
                closeVideoModal();
            }
        });

        // Close modal with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && videoModal.style.display === 'block') {
                closeVideoModal();
            }
        });

        // Play/Pause functionality
        playPauseBtn.addEventListener('click', function() {
            if (workoutVideo.paused) {
                workoutVideo.play();
                this.innerHTML = '<i class="fas fa-pause"></i><span>Pause</span>';
            } else {
                workoutVideo.pause();
                this.innerHTML = '<i class="fas fa-play"></i><span>Play</span>';
            }
        });

        // Restart functionality
        restartBtn.addEventListener('click', function() {
            workoutVideo.currentTime = 0;
            workoutVideo.play();
            playPauseBtn.innerHTML = '<i class="fas fa-pause"></i><span>Pause</span>';
        });

        // Fullscreen functionality
        fullscreenBtn.addEventListener('click', function() {
            if (workoutVideo.requestFullscreen) {
                workoutVideo.requestFullscreen();
            } else if (workoutVideo.webkitRequestFullscreen) {
                workoutVideo.webkitRequestFullscreen();
            } else if (workoutVideo.msRequestFullscreen) {
                workoutVideo.msRequestFullscreen();
            }
        });

        // Update progress bar
        workoutVideo.addEventListener('timeupdate', function() {
            const progress = (workoutVideo.currentTime / workoutVideo.duration) * 100;
            progressBar.style.width = progress + '%';
        });

        // Update play/pause button when video ends
        workoutVideo.addEventListener('ended', function() {
            playPauseBtn.innerHTML = '<i class="fas fa-play"></i><span>Play</span>';
            progressBar.style.width = '100%';
        });

        // Category filtering functionality
        const categoryBtns = document.querySelectorAll('.category-btn');

        categoryBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                // Remove active class from all buttons
                categoryBtns.forEach(b => b.classList.remove('active'));
                // Add active class to clicked button
                this.classList.add('active');

                const category = this.textContent.toLowerCase();
                
                if (category === 'all') {
                    showDefaultWorkouts();
                } else {
                    // Search for category-specific workouts
                    searchYouTubeWorkouts(category);
                }
            });
        });

        // Enhanced search functionality with YouTube integration
        const searchInput = document.querySelector('.search-bar input');
        let searchTimeout;

        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.trim();
            
            // Clear previous timeout
            clearTimeout(searchTimeout);
            
            if (searchTerm.length === 0) {
                // Show default workouts if search is empty
                showDefaultWorkouts();
                return;
            }
            
            // Debounce search to avoid too many API calls
            searchTimeout = setTimeout(() => {
                searchYouTubeWorkouts(searchTerm);
            }, 500);
        });

        // Search YouTube for workout videos
        async function searchYouTubeWorkouts(searchTerm) {
            try {
                showSearchLoading(true);
                
                // Use YouTube API to search for workout videos
                const response = await fetch(`/api/search-workouts?q=${encodeURIComponent(searchTerm + ' workout')}`);
                const result = await response.json();
                
                if (result.success && result.videos) {
                    displaySearchResults(result.videos, searchTerm);
                } else {
                    showSearchError('No workout videos found. Try a different search term.');
                }
            } catch (error) {
                console.error('Search error:', error);
                showSearchError('Failed to search for workouts. Please try again.');
            } finally {
                showSearchLoading(false);
            }
        }

        // Display search results
        function displaySearchResults(videos, searchTerm) {
            const workoutGrid = document.querySelector('.workout-grid');
            
            workoutGrid.innerHTML = videos.map((video, index) => {
                const xpReward = calculateXPReward(video.duration);
                const difficulty = getDifficultyFromTitle(video.title);
                
                return `
                    <div class="workout-card search-result">
                        <div class="xp-reward">⚡ +${xpReward} XP</div>
                        <div class="workout-image" style="background-image: url('${video.thumbnail}')">
                            <div class="video-overlay">
                                <i class="fab fa-youtube" style="color: #FF0000; font-size: 2rem;"></i>
                            </div>
                        </div>
                        <div class="workout-content">
                            <h3 class="workout-title">${video.title}</h3>
                            <div class="workout-meta">
                                <span><i class="far fa-clock"></i> ${video.duration}</span>
                                <span><i class="fas fa-fire"></i> ${video.calories} cal</span>
                                <span><i class="fab fa-youtube"></i> ${video.views} views</span>
                            </div>
                            <div class="channel-info">
                                <span><i class="fas fa-user"></i> ${video.channelTitle || 'Fitness Channel'}</span>
                            </div>
                            <p class="workout-desc">${video.description}</p>
                            <div class="workout-footer">
                                <span class="difficulty ${difficulty.class}">${difficulty.text}</span>
                                <button class="btn btn-primary start-workout-btn" 
                                        data-workout-title="${video.title}"
                                        data-workout-duration="${video.duration}"
                                        data-workout-calories="${video.calories}"
                                        data-workout-video="${video.videoId}"
                                        data-workout-type="youtube"
                                        data-xp-reward="${xpReward}">
                                    Start
                                </button>
                            </div>
                        </div>
                    </div>
                `;
            }).join('');
            
            // Re-attach event listeners to new buttons
            attachWorkoutButtonListeners();
        }

        // Calculate XP reward based on video duration
        function calculateXPReward(duration) {
            const minutes = parseDuration(duration);
            if (minutes <= 15) return 40;
            if (minutes <= 30) return 60;
            if (minutes <= 45) return 80;
            if (minutes <= 60) return 100;
            return 120;
        }

        // Parse duration string to minutes
        function parseDuration(duration) {
            const match = duration.match(/(\d+)/);
            return match ? parseInt(match[1]) : 30;
        }

        // Get difficulty based on title keywords
        function getDifficultyFromTitle(title) {
            const titleLower = title.toLowerCase();
            if (titleLower.includes('beginner') || titleLower.includes('easy') || titleLower.includes('gentle')) {
                return { class: 'beginner', text: 'Beginner' };
            }
            if (titleLower.includes('advanced') || titleLower.includes('intense') || titleLower.includes('extreme')) {
                return { class: 'advanced', text: 'Advanced' };
            }
            return { class: 'intermediate', text: 'Intermediate' };
        }

        // Show default workouts
        function showDefaultWorkouts() {
            const workoutGrid = document.querySelector('.workout-grid');
            workoutGrid.innerHTML = getDefaultWorkoutsHTML();
            attachWorkoutButtonListeners();
        }

        // Get default workouts HTML
        function getDefaultWorkoutsHTML() {
            return `
                <!-- Workout Card 1 -->
                <div class="workout-card">
                    <div class="xp-reward">⚡ +75 XP</div>
                    <div class="workout-image" style="background-image: url('https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80')"></div>
                    <div class="workout-content">
                        <h3 class="workout-title">Full Body Strength</h3>
                        <div class="workout-meta">
                            <span><i class="far fa-clock"></i> 45 min</span>
                            <span><i class="fas fa-fire"></i> 320 cal</span>
                        </div>
                        <p class="workout-desc">Comprehensive full body workout targeting all major muscle groups with compound exercises.</p>
                        <div class="workout-footer">
                            <span class="difficulty intermediate">Intermediate</span>
                            <button class="btn btn-primary start-workout-btn" 
                                    data-workout-title="Full Body Strength"
                                    data-workout-duration="45 min"
                                    data-workout-calories="320 cal"
                                    data-workout-video="dQw4w9WgXcQ"
                                    data-workout-type="youtube"
                                    data-xp-reward="75">
                                Start
                            </button>
                        </div>
                    </div>
                </div>
                
                <!-- Workout Card 2 -->
                <div class="workout-card">
                    <div class="xp-reward">⚡ +100 XP</div>
                    <div class="workout-image" style="background-image: url('https://images.unsplash.com/photo-1571019614242-c5c5dee9f50b?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80')"></div>
                    <div class="workout-content">
                        <h3 class="workout-title">HIIT Burner</h3>
                        <div class="workout-meta">
                            <span><i class="far fa-clock"></i> 30 min</span>
                            <span><i class="fas fa-fire"></i> 450 cal</span>
                        </div>
                        <p class="workout-desc">High intensity interval training to maximize fat burn and cardiovascular endurance.</p>
                        <div class="workout-footer">
                            <span class="difficulty advanced">Advanced</span>
                            <button class="btn btn-primary start-workout-btn" 
                                    data-workout-title="HIIT Burner"
                                    data-workout-duration="30 min"
                                    data-workout-calories="450 cal"
                                    data-workout-video="dQw4w9WgXcQ"
                                    data-workout-type="youtube"
                                    data-xp-reward="100">
                                Start
                            </button>
                        </div>
                    </div>
                </div>
                
                <!-- Workout Card 3 -->
                <div class="workout-card">
                    <div class="xp-reward">⚡ +60 XP</div>
                    <div class="workout-image" style="background-image: url('https://images.unsplash.com/photo-1545205597-3d9d02c29597?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80')"></div>
                    <div class="workout-content">
                        <h3 class="workout-title">Yoga Flow</h3>
                        <div class="workout-meta">
                            <span><i class="far fa-clock"></i> 60 min</span>
                            <span><i class="fas fa-fire"></i> 180 cal</span>
                        </div>
                        <p class="workout-desc">Gentle yoga sequence to improve flexibility, balance, and mental clarity.</p>
                        <div class="workout-footer">
                            <span class="difficulty beginner">Beginner</span>
                            <button class="btn btn-primary start-workout-btn" 
                                    data-workout-title="Yoga Flow"
                                    data-workout-duration="60 min"
                                    data-workout-calories="180 cal"
                                    data-workout-video="dQw4w9WgXcQ"
                                    data-workout-type="youtube"
                                    data-xp-reward="60">
                                Start
                            </button>
                        </div>
                    </div>
                </div>
                
                <!-- More default workouts... -->
                <div class="workout-card">
                    <div class="xp-reward">⚡ +70 XP</div>
                    <div class="workout-image" style="background-image: url('https://images.unsplash.com/photo-1538805060514-97d9cc17730c?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80')"></div>
                    <div class="workout-content">
                        <h3 class="workout-title">Upper Body Sculpt</h3>
                        <div class="workout-meta">
                            <span><i class="far fa-clock"></i> 40 min</span>
                            <span><i class="fas fa-fire"></i> 280 cal</span>
                        </div>
                        <p class="workout-desc">Targeted upper body workout focusing on arms, shoulders, chest and back.</p>
                        <div class="workout-footer">
                            <span class="difficulty intermediate">Intermediate</span>
                            <button class="btn btn-primary start-workout-btn" 
                                    data-workout-title="Upper Body Sculpt"
                                    data-workout-duration="40 min"
                                    data-workout-calories="280 cal"
                                    data-workout-video="dQw4w9WgXcQ"
                                    data-workout-type="youtube"
                                    data-xp-reward="70">
                                Start
                            </button>
                        </div>
                    </div>
                </div>
                
                <div class="workout-card">
                    <div class="xp-reward">⚡ +55 XP</div>
                    <div class="workout-image" style="background-image: url('https://images.unsplash.com/photo-1534258936925-c58bed479fcb?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80')"></div>
                    <div class="workout-content">
                        <h3 class="workout-title">Core Crusher</h3>
                        <div class="workout-meta">
                            <span><i class="far fa-clock"></i> 25 min</span>
                            <span><i class="fas fa-fire"></i> 200 cal</span>
                        </div>
                        <p class="workout-desc">Intense core workout to strengthen your abs, obliques and lower back.</p>
                        <div class="workout-footer">
                            <span class="difficulty intermediate">Intermediate</span>
                            <button class="btn btn-primary start-workout-btn" 
                                    data-workout-title="Core Crusher"
                                    data-workout-duration="25 min"
                                    data-workout-calories="200 cal"
                                    data-workout-video="dQw4w9WgXcQ"
                                    data-workout-type="youtube"
                                    data-xp-reward="55">
                                Start
                            </button>
                        </div>
                    </div>
                </div>
                
                <div class="workout-card">
                    <div class="xp-reward">⚡ +40 XP</div>
                    <div class="workout-image" style="background-image: url('https://images.unsplash.com/photo-1576678927484-cc907957088c?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80')"></div>
                    <div class="workout-content">
                        <h3 class="workout-title">Recovery Stretch</h3>
                        <div class="workout-meta">
                            <span><i class="far fa-clock"></i> 20 min</span>
                            <span><i class="fas fa-fire"></i> 80 cal</span>
                        </div>
                        <p class="workout-desc">Gentle stretching routine to improve mobility and aid muscle recovery.</p>
                        <div class="workout-footer">
                            <span class="difficulty beginner">Beginner</span>
                            <button class="btn btn-primary start-workout-btn" 
                                    data-workout-title="Recovery Stretch"
                                    data-workout-duration="20 min"
                                    data-workout-calories="80 cal"
                                    data-workout-video="dQw4w9WgXcQ"
                                    data-workout-type="youtube"
                                    data-xp-reward="40">
                                Start
                            </button>
                        </div>
                    </div>
                </div>
            `;
        }

        // Attach event listeners to workout buttons
        function attachWorkoutButtonListeners() {
            const startWorkoutBtns = document.querySelectorAll('.start-workout-btn');
            startWorkoutBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const workoutTitle = this.getAttribute('data-workout-title');
                    const workoutDuration = this.getAttribute('data-workout-duration');
                    const workoutCalories = this.getAttribute('data-workout-calories');
                    const workoutVideo = this.getAttribute('data-workout-video');
                    const workoutType = this.getAttribute('data-workout-type') || 'youtube';
                    const xpReward = this.getAttribute('data-xp-reward') || '50';

                    // Store current workout data
                    currentWorkout = {
                        title: workoutTitle,
                        duration: workoutDuration,
                        calories: workoutCalories,
                        videoId: workoutVideo,
                        type: workoutType,
                        xpReward: parseInt(xpReward)
                    };

                    // Update modal content
                    modalWorkoutTitle.textContent = workoutTitle;
                    modalWorkoutName.textContent = workoutTitle;
                    modalDuration.innerHTML = `<i class="far fa-clock"></i> ${workoutDuration}`;
                    modalCalories.innerHTML = `<i class="fas fa-fire"></i> ${workoutCalories}`;
                    
                    // Load YouTube video
                    loadYouTubeVideo(workoutVideo);
                    
                    // Show modal
                    videoModal.style.display = 'block';
                    document.body.style.overflow = 'hidden';
                });
            });
        }

        // Load YouTube video
        function loadYouTubeVideo(videoId) {
            const youtubePlayer = document.getElementById('youtubePlayer');
            const workoutVideo = document.getElementById('workoutVideo');
            
            // Hide regular video player
            workoutVideo.style.display = 'none';
            
            // Show and configure YouTube player
            youtubePlayer.style.display = 'block';
            
            // Enhanced YouTube embed with better parameters
            const embedUrl = `https://www.youtube.com/embed/${videoId}?` + 
                'enablejsapi=1&' +
                'autoplay=1&' +
                'rel=0&' +
                'modestbranding=1&' +
                'fs=1&' +
                'cc_load_policy=0&' +
                'iv_load_policy=3&' +
                'autohide=1&' +
                'controls=1&' +
                'showinfo=0';
                
            youtubePlayer.src = embedUrl;
            
            // Add error handling
            youtubePlayer.onerror = function() {
                console.error('Failed to load YouTube video:', videoId);
                showNotification('Failed to load video. Please try another workout.', 'error');
            };
        }

        // Show search loading state
        function showSearchLoading(show) {
            const workoutGrid = document.querySelector('.workout-grid');
            
            if (show) {
                workoutGrid.innerHTML = `
                    <div style="grid-column: 1 / -1; text-align: center; padding: 60px 20px;">
                        <div style="font-size: 3rem; margin-bottom: 20px;">🔍</div>
                        <div style="font-size: 1.2rem; color: var(--primary); font-weight: 600;">Searching for workouts...</div>
                        <div style="font-size: 0.9rem; color: var(--gray); margin-top: 10px;">Finding the best videos for you</div>
                    </div>
                `;
            }
        }

        // Show search error
        function showSearchError(message) {
            const workoutGrid = document.querySelector('.workout-grid');
            workoutGrid.innerHTML = `
                <div style="grid-column: 1 / -1; text-align: center; padding: 60px 20px;">
                    <div style="font-size: 3rem; margin-bottom: 20px;">😔</div>
                    <div style="font-size: 1.2rem; color: var(--danger); font-weight: 600; margin-bottom: 10px;">Oops!</div>
                    <div style="font-size: 0.9rem; color: var(--gray);">${message}</div>
                    <button onclick="showDefaultWorkouts()" style="margin-top: 20px; padding: 10px 20px; background: var(--primary); color: white; border: none; border-radius: 8px; cursor: pointer;">
                        Show Default Workouts
                    </button>
                </div>
            `;
        }
        // Show notification
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 15px 20px;
                border-radius: 8px;
                color: white;
                font-weight: 500;
                z-index: 2000;
                background: ${type === 'success' ? '#28A745' : '#DC3545'};
                box-shadow: 0 4px 12px rgba(0,0,0,0.3);
            `;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // Show gamification notifications
        function showGamificationNotifications(gamificationData) {
            let delay = 1000;

            // Show XP notification
            if (gamificationData.xp > 0) {
                setTimeout(() => {
                    showGamificationPopup(`+${gamificationData.xp} XP`, '🎯', 'xp');
                }, delay);
                delay += 2000;
            }

            // Show level up notification
            if (gamificationData.levelUp) {
                setTimeout(() => {
                    showGamificationPopup('Level Up!', '🎉', 'levelup');
                }, delay);
                delay += 2000;
            }

            // Show streak notifications
            if (gamificationData.streaks?.workout?.streakUpdated) {
                setTimeout(() => {
                    const streak = gamificationData.streaks.workout.currentStreak;
                    showGamificationPopup(`${streak} Day Streak!`, '🔥', 'streak');
                }, delay);
                delay += 2000;
            }

            // Show achievement notifications
            if (gamificationData.achievements && gamificationData.achievements.length > 0) {
                gamificationData.achievements.forEach((achievement, index) => {
                    setTimeout(() => {
                        showAchievementPopup(achievement);
                    }, delay + (index * 2000));
                });
            }
        }

        // Show gamification popup
        function showGamificationPopup(message, icon, type) {
            const popup = document.createElement('div');
            popup.style.cssText = `
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%) scale(0);
                background: linear-gradient(135deg, var(--primary), var(--secondary));
                color: white;
                padding: 20px 30px;
                border-radius: 16px;
                text-align: center;
                z-index: 3000;
                box-shadow: 0 10px 30px rgba(0,0,0,0.3);
                transition: all 0.3s ease;
                min-width: 200px;
            `;
            
            popup.innerHTML = `
                <div style="font-size: 2rem; margin-bottom: 10px;">${icon}</div>
                <div style="font-size: 1.2rem; font-weight: 600;">${message}</div>
            `;
            
            document.body.appendChild(popup);
            
            setTimeout(() => {
                popup.style.transform = 'translate(-50%, -50%) scale(1)';
            }, 100);
            
            setTimeout(() => {
                popup.style.transform = 'translate(-50%, -50%) scale(0)';
                setTimeout(() => popup.remove(), 300);
            }, 2000);
        }

        // Show achievement popup
        function showAchievementPopup(achievement) {
            const rarityColors = {
                common: '#28a745',
                rare: '#007bff',
                epic: '#6f42c1',
                legendary: '#fd7e14'
            };
            
            const rarityColor = rarityColors[achievement.rarity] || '#28a745';
            
            const popup = document.createElement('div');
            popup.style.cssText = `
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%) scale(0);
                background: white;
                color: var(--dark);
                padding: 25px;
                border-radius: 16px;
                text-align: center;
                z-index: 3000;
                box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                transition: all 0.3s ease;
                min-width: 300px;
                border: 3px solid ${rarityColor};
            `;
            
            popup.innerHTML = `
                <div style="background: ${rarityColor}; color: white; padding: 5px 10px; border-radius: 20px; font-size: 0.8rem; font-weight: 600; text-transform: uppercase; margin-bottom: 15px; display: inline-block;">${achievement.rarity}</div>
                <div style="font-size: 3rem; margin-bottom: 15px;">${achievement.icon}</div>
                <div style="font-size: 1.4rem; font-weight: 600; margin-bottom: 8px; color: ${rarityColor};">Achievement Unlocked!</div>
                <div style="font-size: 1.1rem; font-weight: 600; margin-bottom: 8px;">${achievement.name}</div>
                <div style="font-size: 0.9rem; color: var(--gray); margin-bottom: 15px;">${achievement.description}</div>
                <div style="font-size: 1rem; color: ${rarityColor}; font-weight: 600;">+${achievement.xpReward} XP</div>
            `;
            
            document.body.appendChild(popup);
            
            setTimeout(() => {
                popup.style.transform = 'translate(-50%, -50%) scale(1)';
            }, 100);
            
            setTimeout(() => {
                popup.style.transform = 'translate(-50%, -50%) scale(0)';
                setTimeout(() => popup.remove(), 300);
            }, 4000);
        }

        // Logout confirmation
        function confirmLogout() {
            return confirm('Are you sure you want to logout?');
        }
    </script>
    
    <!-- Enhanced Fit-With-AI Voice Assistant -->
    <script src="/js/voice-assistant-enhanced-fitwithai.js"></script>
</body>
</html>