<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Coach - Fit-With-AI</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #6C63FF;
            --secondary: #4D44DB;
            --accent: #FF6584;
            --light: #F8F9FA;
            --dark: #343A40;
            --success: #28A745;
            --warning: #FFC107;
            --danger: #DC3545;
            --gray: #6C757D;
            --light-gray: #E9ECEF;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background: radial-gradient(ellipse at top, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
            color: #ffffff;
            overflow-x: hidden;
            min-height: 100vh;
        }
        
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%);
            pointer-events: none;
            z-index: -1;
        }
        
        .dashboard-container {
            display: grid;
            grid-template-columns: 280px 1fr;
            min-height: 100vh;
            gap: 20px;
            padding: 20px;
        }
        
        .sidebar {
            background: transparent;
            border: none;
            padding: 30px 20px;
            position: sticky;
            top: 20px;
            height: fit-content;
        }
        
        .sidebar-header {
            display: flex;
            align-items: center;
            margin-bottom: 2rem;
            padding: 0 1rem;
        }
        
        .sidebar-header img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }
        
        .user-name {
            font-weight: 600;
            margin: 0;
            color: white;
        }
        
        .user-plan {
            font-size: 0.8rem;
            color: var(--primary);
            background: rgba(108, 99, 255, 0.1);
            padding: 2px 8px;
            border-radius: 20px;
            margin-top: 5px;
        }
        
        .nav-menu {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .nav-item {
            margin-bottom: 5px;
        }
        
        .nav-link {
            display: flex;
            align-items: center;
            padding: 12px 15px;
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            border-radius: 15px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            margin: 5px 0;
        }
        
        .nav-link::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            transition: left 0.5s;
        }
        
        .nav-link:hover::before {
            left: 100%;
        }
        
        .nav-link:hover, .nav-link.active {
            background: rgba(108, 99, 255, 0.2);
            color: #ffffff;
            transform: translateX(5px);
        }
        
        .nav-link i {
            margin-right: 10px;
            font-size: 1.2rem;
        }        
        .logout-section {
            margin-top: 2rem;
            padding-top: 1rem;
            border-top: 1px solid var(--light-gray);
        }
        
        .logout-link {
            display: flex;
            align-items: center;
            padding: 12px 1rem;
            color: var(--danger);
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        
        .logout-link:hover {
            background: rgba(220, 53, 69, 0.1);
            color: var(--danger);
        }
        
        .logout-link i {
            margin-right: 10px;
            font-size: 1.2rem;
        }
        
        .main-content {
            display: flex;
            flex-direction: column;
            gap: 25px;
        }
        
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        .page-title {
            font-size: 2rem;
            font-weight: 600;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .ai-coach-card {
            background: transparent;
            border: none;
            padding: 2rem;
            margin-bottom: 2rem;
            position: relative;
        }
        
        .ai-coach-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, 
                rgba(108, 99, 255, 0.1) 0%,
                rgba(255, 255, 255, 0.05) 50%,
                rgba(108, 99, 255, 0.08) 100%);
            border-radius: 12px;
            z-index: -1;
        }
        
        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }
        
        .card-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin: 0;
            color: white;
        }
        
        .ai-message {
            background: rgba(108, 99, 255, 0.1);
            border-left: 4px solid var(--primary);
            padding: 1rem;
            border-radius: 0 8px 8px 0;
            margin-bottom: 1rem;
            color: white;
        }
        
        .user-message {
            background: rgba(255, 255, 255, 0.1);
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            color: white;
        }
        
        .chat-container {
            height: 400px;
            overflow-y: auto;
            margin-bottom: 1rem;
            padding-right: 1rem;
        }
        
        .input-group {
            display: flex;
            gap: 10px;
        }
        
        .form-control {
            flex: 1;
            padding: 12px 16px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            font-family: 'Poppins', sans-serif;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.1);
            color: white;
        }
        
        .form-control::placeholder {
            color: rgba(255, 255, 255, 0.5);
        }
        
        .form-control:focus {
            border-color: var(--primary);
            outline: none;
            box-shadow: 0 0 0 3px rgba(108, 99, 255, 0.2);
        }
        
        .btn {
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            border: none;
            font-family: 'Poppins', sans-serif;
        }
        
        .btn-primary {
            background: var(--primary);
            color: white;
        }
        
        .btn-primary:hover {
            background: var(--secondary);
        }
        
        .coach-features {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 2rem;
        }
        
        .feature-card {
            background: transparent;
            border: none;
            padding: 1.5rem;
            transition: all 0.3s ease;
            position: relative;
        }
        
        .feature-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, 
                rgba(108, 99, 255, 0.1) 0%,
                rgba(255, 255, 255, 0.05) 50%,
                rgba(108, 99, 255, 0.08) 100%);
            border-radius: 12px;
            z-index: -1;
        }
        
        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.1);
        }
        
        .feature-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            background: rgba(108, 99, 255, 0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 1rem;
            color: var(--primary);
            font-size: 1.2rem;
        }
        
        .feature-title {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: white;
        }
        
        .feature-desc {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.9rem;
        }
        
        @media (max-width: 768px) {
            .dashboard-container {
                grid-template-columns: 1fr;
                padding: 10px;
            }
            
            .sidebar {
                display: none;
            }
            
            .main-content {
                padding: 1rem;
            }
            
            .coach-features {
                grid-template-columns: 1fr;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar Navigation -->
        <div class="sidebar">
            <div class="sidebar-header">
                <img src="https://ui-avatars.com/api/?name=<%= user.fullName %>&background=6C63FF&color=fff" alt="User Avatar">
                <div>
                    <h3 class="user-name"><%= user.fullName %></h3>
                    <span class="user-plan">Premium Plan</span>
                </div>
            </div>
            
            <ul class="nav-menu">
                <li class="nav-item"><a href="/dashboard" class="nav-link"><i class="fas fa-home"></i> Dashboard</a></li>
                <li class="nav-item"><a href="/workouts" class="nav-link"><i class="fas fa-dumbbell"></i> Workouts</a></li>
                <li class="nav-item"><a href="/progress" class="nav-link"><i class="fas fa-chart-line"></i> Progress</a></li>
                <li class="nav-item"><a href="/nutrition" class="nav-link"><i class="fas fa-utensils"></i> Nutrition</a></li>
                <li class="nav-item"><a href="/meal-planner" class="nav-link"><i class="fas fa-calendar-check"></i> Meal Planner</a></li>
                <li class="nav-item"><a href="/challenges" class="nav-link"><i class="fas fa-trophy"></i> Challenges</a></li>
                <li class="nav-item"><a href="/health" class="nav-link"><i class="fas fa-heartbeat"></i> Health Metrics</a></li>
                <li class="nav-item"><a href="/biometrics" class="nav-link"><i class="fas fa-chart-bar"></i> Biometrics</a></li>
                <li class="nav-item"><a href="/schedule" class="nav-link"><i class="fas fa-calendar-alt"></i> Schedule</a></li>
                <li class="nav-item"><a href="/community" class="nav-link"><i class="fas fa-users"></i> Community</a></li>
                <li class="nav-item"><a href="/ai-coach" class="nav-link"><i class="fas fa-robot"></i> AI Coach</a></li>
                <li class="nav-item"><a href="/settings" class="nav-link"><i class="fas fa-cog"></i> Settings</a></li>
            </ul>
            
            <!-- Logout Section -->
            <div class="logout-section">
                <a href="/logout" class="logout-link" onclick="return confirmLogout()">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </a>
            </div>
        </div>
        
        <!-- Main Content -->
        <div class="main-content">
            <div class="page-header">
                <h1 class="page-title">AI Fitness Coach</h1>
                <div>
                    <button class="btn btn-primary" id="generateWorkoutBtn"><i class="fas fa-magic"></i> Generate Workout Plan</button>
                    <button class="btn btn-primary" id="formCorrectionBtn" style="margin-left: 10px;"><i class="fas fa-video"></i> Form Correction</button>
                    <button class="btn btn-primary" id="virtualTrainingBtn" style="margin-left: 10px;"><i class="fas fa-user-tie"></i> Virtual Training</button>
                </div>
            </div>
            
            <div class="ai-coach-card">
                <div class="card-header">
                    <h2 class="card-title">Chat with your AI Coach</h2>
                </div>
                
                <div class="chat-container" id="chatContainer">
                    <div class="ai-message">
                        <strong>AI Coach:</strong>
                        <p>Hello <%= user.fullName.split(' ')[0] %>! 👋 I'm your personal AI fitness coach, and I'm excited to help you on your fitness journey! 
                        
                        I can assist you with:
                        • 🏋️ Personalized workout plans
                        • 🥗 Nutrition guidance and meal planning  
                        • 📈 Progress tracking and motivation
                        • 💪 Form tips and exercise modifications
                        • 🎯 Goal setting and achievement strategies
                        
                        What would you like to work on today? Feel free to ask me anything about fitness, health, or wellness!</p>
                    </div>
                </div>
                
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Ask your AI coach anything..." id="messageInput">
                    <button class="btn btn-primary" id="sendButton"><i class="fas fa-paper-plane"></i> Send</button>
                </div>
            </div>
            
            <div class="ai-coach-card">
                <div class="card-header">
                    <h2 class="card-title">AI Coach Features</h2>
                </div>
                
                <div class="coach-features">
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-dumbbell"></i>
                        </div>
                        <h3 class="feature-title">Personalized Workouts</h3>
                        <p class="feature-desc">Get custom workout plans tailored to your fitness level, goals, and available equipment.</p>
                    </div>
                    
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-utensils"></i>
                        </div>
                        <h3 class="feature-title">Nutrition Guidance</h3>
                        <p class="feature-desc">Receive meal plans and nutritional advice based on your dietary preferences and goals.</p>
                    </div>
                    
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <h3 class="feature-title">Progress Analysis</h3>
                        <p class="feature-desc">Get insights into your workout performance and suggestions for improvement.</p>
                    </div>
                    
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-calendar-alt"></i>
                        </div>
                        <h3 class="feature-title">Schedule Optimization</h3>
                        <p class="feature-desc">Automatically adjust your workout schedule based on your availability and recovery needs.</p>
                    </div>
                    
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-video"></i>
                        </div>
                        <h3 class="feature-title">Form Correction</h3>
                        <p class="feature-desc">Upload videos of your exercises for AI-powered form analysis and corrections.</p>
                    </div>
                    
                    <div class="feature-card">
                        <div class="feature-icon">
                            <i class="fas fa-trophy"></i>
                        </div>
                        <h3 class="feature-title">Goal Setting</h3>
                        <p class="feature-desc">Set and track SMART fitness goals with the AI's guidance and motivation.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        // Real AI chat functionality
        let isLoading = false;

        async function sendMessage() {
            if (isLoading) return;
            
            const input = document.getElementById('messageInput');
            const sendButton = document.getElementById('sendButton');
            const message = input.value.trim();
            
            if (!message) return;

            const chatContainer = document.getElementById('chatContainer');
            
            // Add user message
            const userMessage = document.createElement('div');
            userMessage.className = 'user-message';
            userMessage.innerHTML = `<strong>You:</strong><p>${message}</p>`;
            chatContainer.appendChild(userMessage);
            
            // Clear input and disable button
            input.value = '';
            isLoading = true;
            sendButton.disabled = true;
            sendButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Thinking...';
            
            // Scroll to bottom
            chatContainer.scrollTop = chatContainer.scrollHeight;
            
            try {
                // Send message to AI API
                const response = await fetch('/api/ai-chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ message: message })
                });

                const data = await response.json();
                
                if (data.success) {
                    // Add AI response
                    const aiMessage = document.createElement('div');
                    aiMessage.className = 'ai-message';
                    aiMessage.innerHTML = `<strong>AI Coach:</strong><p>${data.response}</p>`;
                    chatContainer.appendChild(aiMessage);
                } else {
                    // Add error message with fallback
                    const errorMessage = document.createElement('div');
                    errorMessage.className = 'ai-message';
                    errorMessage.innerHTML = `<strong>AI Coach:</strong><p>${data.fallback || 'Sorry, I had trouble processing that. Can you try rephrasing your question?'}</p>`;
                    chatContainer.appendChild(errorMessage);
                }
                
            } catch (error) {
                console.error('Chat error:', error);
                // Add fallback message
                const fallbackMessage = document.createElement('div');
                fallbackMessage.className = 'ai-message';
                fallbackMessage.innerHTML = `<strong>AI Coach:</strong><p>I'm here to help with your fitness journey! I can assist with workouts, nutrition advice, motivation, and tracking your progress. What would you like to know?</p>`;
                chatContainer.appendChild(fallbackMessage);
            } finally {
                // Re-enable button
                isLoading = false;
                sendButton.disabled = false;
                sendButton.innerHTML = '<i class="fas fa-paper-plane"></i> Send';
                
                // Scroll to bottom
                chatContainer.scrollTop = chatContainer.scrollHeight;
                
                // Focus back on input
                input.focus();
            }
        }

        // Event listeners
        document.getElementById('sendButton').addEventListener('click', sendMessage);
        
        // Allow sending with Enter key
        document.getElementById('messageInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
            }
        });

        // Advanced AI Workout Plan Generation
        document.getElementById('generateWorkoutBtn').addEventListener('click', async function() {
            const button = this;
            const originalText = button.innerHTML;
            
            try {
                button.disabled = true;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Generating...';
                
                const response = await fetch('/api/ai-workout-plan', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        preferences: {
                            timeAvailable: 30,
                            fitnessLevel: 'intermediate',
                            equipment: ['bodyweight'],
                            intensity: 'moderate'
                        }
                    })
                });

                const data = await response.json();
                
                if (data.success) {
                    // Add workout plan to chat
                    const chatContainer = document.getElementById('chatContainer');
                    const workoutMessage = document.createElement('div');
                    workoutMessage.className = 'ai-message';
                    workoutMessage.innerHTML = `
                        <strong>AI Coach:</strong>
                        <h4>🏋️ ${data.workoutPlan.title}</h4>
                        <p><strong>Description:</strong> ${data.workoutPlan.description}</p>
                        <div style="background: rgba(108, 99, 255, 0.1); padding: 1rem; border-radius: 8px; margin: 1rem 0;">
                            <pre style="white-space: pre-wrap; font-family: inherit;">${data.workoutPlan.content}</pre>
                        </div>
                        <p><em>Generated by: ${data.generatedBy} at ${new Date(data.timestamp).toLocaleString()}</em></p>
                    `;
                    chatContainer.appendChild(workoutMessage);
                    chatContainer.scrollTop = chatContainer.scrollHeight;
                } else {
                    alert('Failed to generate workout plan: ' + data.error);
                }
                
            } catch (error) {
                console.error('Workout generation error:', error);
                alert('Failed to generate workout plan. Please try again.');
            } finally {
                button.disabled = false;
                button.innerHTML = originalText;
            }
        });

        // Form Correction Feature
        document.getElementById('formCorrectionBtn').addEventListener('click', async function() {
            const modal = createFormCorrectionModal();
            document.body.appendChild(modal);
        });

        // Virtual Training Feature
        document.getElementById('virtualTrainingBtn').addEventListener('click', async function() {
            const modal = createVirtualTrainingModal();
            document.body.appendChild(modal);
        });

        // Create Form Correction Modal
        function createFormCorrectionModal() {
            const modal = document.createElement('div');
            modal.style.cssText = `
                position: fixed; top: 0; left: 0; width: 100%; height: 100%;
                background: rgba(0,0,0,0.5); display: flex; align-items: center;
                justify-content: center; z-index: 1000;
            `;
            
            modal.innerHTML = `
                <div style="background: white; border-radius: 12px; padding: 2rem; max-width: 600px; width: 90%; max-height: 80vh; overflow-y: auto;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                        <h2 style="margin: 0; color: var(--primary);">🎯 AI Form Correction</h2>
                        <button onclick="this.closest('.modal').remove()" style="background: none; border: none; font-size: 1.5rem; cursor: pointer;">&times;</button>
                    </div>
                    
                    <div id="formCorrectionContent">
                        <p>Select an exercise to start form correction analysis:</p>
                        
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin: 1rem 0;">
                            <button class="exercise-btn" data-exercise="squat" style="padding: 1rem; border: 2px solid var(--light-gray); border-radius: 8px; background: white; cursor: pointer; transition: all 0.3s;">
                                <i class="fas fa-dumbbell" style="font-size: 2rem; color: var(--primary); display: block; margin-bottom: 0.5rem;"></i>
                                <strong>Squat</strong>
                                <p style="margin: 0.5rem 0 0 0; font-size: 0.9rem; color: var(--gray);">Beginner friendly</p>
                            </button>
                            
                            <button class="exercise-btn" data-exercise="pushup" style="padding: 1rem; border: 2px solid var(--light-gray); border-radius: 8px; background: white; cursor: pointer; transition: all 0.3s;">
                                <i class="fas fa-hand-paper" style="font-size: 2rem; color: var(--primary); display: block; margin-bottom: 0.5rem;"></i>
                                <strong>Push-up</strong>
                                <p style="margin: 0.5rem 0 0 0; font-size: 0.9rem; color: var(--gray);">Intermediate</p>
                            </button>
                            
                            <button class="exercise-btn" data-exercise="plank" style="padding: 1rem; border: 2px solid var(--light-gray); border-radius: 8px; background: white; cursor: pointer; transition: all 0.3s;">
                                <i class="fas fa-stopwatch" style="font-size: 2rem; color: var(--primary); display: block; margin-bottom: 0.5rem;"></i>
                                <strong>Plank</strong>
                                <p style="margin: 0.5rem 0 0 0; font-size: 0.9rem; color: var(--gray);">Beginner friendly</p>
                            </button>
                            
                            <button class="exercise-btn" data-exercise="lunge" style="padding: 1rem; border: 2px solid var(--light-gray); border-radius: 8px; background: white; cursor: pointer; transition: all 0.3s;">
                                <i class="fas fa-walking" style="font-size: 2rem; color: var(--primary); display: block; margin-bottom: 0.5rem;"></i>
                                <strong>Lunge</strong>
                                <p style="margin: 0.5rem 0 0 0; font-size: 0.9rem; color: var(--gray);">Intermediate</p>
                            </button>
                        </div>
                        
                        <div style="background: rgba(108, 99, 255, 0.1); padding: 1rem; border-radius: 8px; margin: 1rem 0;">
                            <h4 style="margin: 0 0 0.5rem 0;">📱 How it works:</h4>
                            <ol style="margin: 0; padding-left: 1.2rem;">
                                <li>Select an exercise above</li>
                                <li>Position your camera for side view</li>
                                <li>Start the session and perform the exercise</li>
                                <li>Get real-time feedback on your form</li>
                            </ol>
                        </div>
                    </div>
                </div>
            `;
            
            // Add exercise button click handlers
            modal.querySelectorAll('.exercise-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const exercise = this.dataset.exercise;
                    startFormCorrectionSession(exercise, modal);
                });
                
                btn.addEventListener('mouseenter', function() {
                    this.style.borderColor = 'var(--primary)';
                    this.style.transform = 'translateY(-2px)';
                });
                
                btn.addEventListener('mouseleave', function() {
                    this.style.borderColor = 'var(--light-gray)';
                    this.style.transform = 'translateY(0)';
                });
            });
            
            modal.className = 'modal';
            return modal;
        }

        // Start Form Correction Session
        async function startFormCorrectionSession(exercise, modal) {
            try {
                const response = await fetch('/api/form-correction/start-session', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ exerciseType: exercise })
                });

                const data = await response.json();
                
                if (data.success) {
                    // Update modal content with session interface
                    const content = modal.querySelector('#formCorrectionContent');
                    content.innerHTML = `
                        <div style="text-align: center;">
                            <h3>🎯 ${data.session.exercise} Form Correction Active</h3>
                            <p>Session ID: ${data.session.sessionId}</p>
                            
                            <div style="background: rgba(40, 167, 69, 0.1); padding: 1rem; border-radius: 8px; margin: 1rem 0;">
                                <h4 style="color: var(--success); margin: 0 0 0.5rem 0;">✅ Session Started Successfully!</h4>
                                <p style="margin: 0;">${data.message}</p>
                            </div>
                            
                            <div style="background: rgba(108, 99, 255, 0.1); padding: 1rem; border-radius: 8px; margin: 1rem 0;">
                                <h4 style="margin: 0 0 0.5rem 0;">📋 Setup Instructions:</h4>
                                <ul style="text-align: left; margin: 0; padding-left: 1.2rem;">
                                    ${data.session.setupTips.map(tip => `<li>${tip}</li>`).join('')}
                                </ul>
                            </div>
                            
                            <div style="background: rgba(255, 193, 7, 0.1); padding: 1rem; border-radius: 8px; margin: 1rem 0;">
                                <h4 style="margin: 0 0 0.5rem 0;">💡 Exercise Instructions:</h4>
                                <p style="margin: 0;">${data.session.instructions}</p>
                            </div>
                            
                            <div style="margin: 2rem 0;">
                                <button id="endSessionBtn" class="btn btn-primary" style="margin-right: 1rem;">End Session</button>
                                <button onclick="this.closest('.modal').remove()" class="btn" style="background: var(--gray); color: white;">Close</button>
                            </div>
                        </div>
                    `;
                    
                    // Add end session handler
                    modal.querySelector('#endSessionBtn').addEventListener('click', async function() {
                        await endFormCorrectionSession(modal);
                    });
                    
                } else {
                    alert('Failed to start form correction session: ' + data.error);
                }
                
            } catch (error) {
                console.error('Form correction error:', error);
                alert('Failed to start form correction session. Please try again.');
            }
        }

        // End Form Correction Session
        async function endFormCorrectionSession(modal) {
            try {
                const response = await fetch('/api/form-correction/end-session', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                const data = await response.json();
                
                if (data.success) {
                    // Show session summary
                    const content = modal.querySelector('#formCorrectionContent');
                    content.innerHTML = `
                        <div style="text-align: center;">
                            <h3>🏁 Session Complete!</h3>
                            
                            <div style="background: rgba(40, 167, 69, 0.1); padding: 1rem; border-radius: 8px; margin: 1rem 0;">
                                <h4 style="color: var(--success); margin: 0 0 1rem 0;">📊 Session Summary</h4>
                                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 1rem; text-align: center;">
                                    <div>
                                        <strong style="display: block; font-size: 1.5rem; color: var(--primary);">${data.summary.repCount || 0}</strong>
                                        <span style="font-size: 0.9rem; color: var(--gray);">Reps Completed</span>
                                    </div>
                                    <div>
                                        <strong style="display: block; font-size: 1.5rem; color: var(--primary);">${data.summary.overallScore || 0}</strong>
                                        <span style="font-size: 0.9rem; color: var(--gray);">Form Score</span>
                                    </div>
                                    <div>
                                        <strong style="display: block; font-size: 1.5rem; color: var(--primary);">${data.summary.duration || 0}m</strong>
                                        <span style="font-size: 0.9rem; color: var(--gray);">Duration</span>
                                    </div>
                                </div>
                            </div>
                            
                            <button onclick="this.closest('.modal').remove()" class="btn btn-primary">Close</button>
                        </div>
                    `;
                } else {
                    alert('Failed to end session: ' + data.error);
                }
                
            } catch (error) {
                console.error('End session error:', error);
                alert('Failed to end session. Please try again.');
            }
        }

        // Create Virtual Training Modal
        function createVirtualTrainingModal() {
            const modal = document.createElement('div');
            modal.style.cssText = `
                position: fixed; top: 0; left: 0; width: 100%; height: 100%;
                background: rgba(0,0,0,0.5); display: flex; align-items: center;
                justify-content: center; z-index: 1000;
            `;
            
            modal.innerHTML = `
                <div style="background: white; border-radius: 12px; padding: 2rem; max-width: 800px; width: 90%; max-height: 80vh; overflow-y: auto;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                        <h2 style="margin: 0; color: var(--primary);">👨‍💼 Virtual Personal Training</h2>
                        <button onclick="this.closest('.modal').remove()" style="background: none; border: none; font-size: 1.5rem; cursor: pointer;">&times;</button>
                    </div>
                    
                    <div id="virtualTrainingContent">
                        <p>Connect with certified personal trainers for one-on-one virtual sessions:</p>
                        
                        <div id="trainersList" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1rem; margin: 1rem 0;">
                            <!-- Trainers will be loaded here -->
                        </div>
                        
                        <div style="text-align: center; margin: 2rem 0;">
                            <button id="loadTrainersBtn" class="btn btn-primary">
                                <i class="fas fa-search"></i> Find Available Trainers
                            </button>
                        </div>
                    </div>
                </div>
            `;
            
            // Add load trainers handler
            modal.querySelector('#loadTrainersBtn').addEventListener('click', function() {
                loadVirtualTrainers(modal);
            });
            
            modal.className = 'modal';
            return modal;
        }

        // Load Virtual Trainers
        async function loadVirtualTrainers(modal) {
            const button = modal.querySelector('#loadTrainersBtn');
            const originalText = button.innerHTML;
            
            try {
                button.disabled = true;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Loading...';
                
                const response = await fetch('/api/virtual-training/trainers');
                const data = await response.json();
                
                if (data.success) {
                    const trainersList = modal.querySelector('#trainersList');
                    trainersList.innerHTML = data.trainers.map(trainer => `
                        <div style="border: 1px solid var(--light-gray); border-radius: 8px; padding: 1rem; transition: all 0.3s;">
                            <div style="display: flex; align-items: center; margin-bottom: 1rem;">
                                <img src="${trainer.avatar}" alt="${trainer.name}" style="width: 50px; height: 50px; border-radius: 50%; margin-right: 1rem;" onerror="this.src='https://ui-avatars.com/api/?name=${trainer.name}&background=6C63FF&color=fff'">
                                <div>
                                    <h4 style="margin: 0; color: var(--primary);">${trainer.name}</h4>
                                    <div style="display: flex; align-items: center; margin-top: 0.25rem;">
                                        <span style="color: var(--warning);">★</span>
                                        <span style="margin-left: 0.25rem; font-size: 0.9rem;">${trainer.rating} (${trainer.experience})</span>
                                    </div>
                                </div>
                            </div>
                            
                            <p style="margin: 0.5rem 0; font-size: 0.9rem; color: var(--gray);">
                                <strong>Specialties:</strong> ${trainer.specialties.join(', ')}
                            </p>
                            
                            <p style="margin: 0.5rem 0; font-size: 0.9rem;">
                                <strong>Rate:</strong> ${trainer.hourlyRate}/hour
                            </p>
                            
                            <button class="btn btn-primary" style="width: 100%; margin-top: 1rem;" onclick="bookTrainer('${trainer.id}', '${trainer.name}')">
                                <i class="fas fa-calendar-plus"></i> Book Session
                            </button>
                        </div>
                    `).join('');
                    
                    button.style.display = 'none';
                } else {
                    alert('Failed to load trainers: ' + data.error);
                }
                
            } catch (error) {
                console.error('Load trainers error:', error);
                alert('Failed to load trainers. Please try again.');
            } finally {
                button.disabled = false;
                button.innerHTML = originalText;
            }
        }

        // Book Trainer Function
        window.bookTrainer = function(trainerId, trainerName) {
            alert(`Booking functionality for ${trainerName} will be implemented. This would open a booking calendar and payment interface.`);
        };

        // Auto-focus on input when page loads
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('messageInput').focus();
        });
        
        // Logout confirmation
        function confirmLogout() {
            return confirm('Are you sure you want to logout?');
        }

        // Add some CSS for loading state
        const style = document.createElement('style');
        style.textContent = `
            .btn:disabled {
                opacity: 0.6;
                cursor: not-allowed;
            }
            .fa-spin {
                animation: fa-spin 2s infinite linear;
            }
            @keyframes fa-spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
        `;
        document.head.appendChild(style);
    </script>
    
    <!-- Enhanced Fit-With-AI Voice Assistant -->
    <script src="/js/voice-assistant-enhanced-fitwithai.js"></script>
</body>
</html>