<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Subscription - Fit-With-AI</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary: #6C63FF;
            --secondary: #4D44DB;
            --accent: #FF6584;
            --success: #28A745;
            --warning: #FFC107;
            --danger: #DC3545;
            --gray: #6C757D;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background: radial-gradient(ellipse at top, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
            color: #ffffff;
            overflow-x: hidden;
            min-height: 100vh;
        }
        
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%);
            pointer-events: none;
            z-index: -1;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            text-align: center;
            margin-bottom: 50px;
            padding-top: 50px;
        }
        
        .header h1 {
            font-size: 3rem;
            font-weight: 700;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 20px;
        }
        
        .header p {
            font-size: 1.2rem;
            opacity: 0.8;
            max-width: 600px;
            margin: 0 auto;
        }
        
        .plans-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 30px;
            margin-bottom: 50px;
        }
        
        .plan-card {
            background: linear-gradient(135deg, rgba(108, 99, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 50%, rgba(108, 99, 255, 0.08) 100%);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            padding: 40px 30px;
            text-align: center;
            position: relative;
            transition: all 0.3s ease;
            overflow: hidden;
        }
        
        .plan-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 25px 50px rgba(108, 99, 255, 0.3);
        }
        
        .plan-card.popular {
            border-color: var(--primary);
            transform: scale(1.05);
        }
        
        .plan-card.popular::before {
            content: '🔥 Most Popular';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            background: var(--primary);
            color: white;
            padding: 10px;
            font-weight: 600;
            font-size: 0.9rem;
        }
        
        .plan-card.popular .plan-content {
            margin-top: 20px;
        }
        
        .plan-name {
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 10px;
        }
        
        .plan-price {
            font-size: 3rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 5px;
        }
        
        .plan-period {
            font-size: 1rem;
            opacity: 0.7;
            margin-bottom: 30px;
        }
        
        .plan-features {
            list-style: none;
            margin-bottom: 30px;
        }
        
        .plan-features li {
            padding: 8px 0;
            display: flex;
            align-items: center;
            justify-content: flex-start;
        }
        
        .plan-features li i {
            color: var(--success);
            margin-right: 10px;
            width: 20px;
        }
        
        .plan-btn {
            width: 100%;
            padding: 15px;
            border: none;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
        }
        
        .plan-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(108, 99, 255, 0.4);
        }
        
        .plan-btn.current {
            background: var(--success);
            cursor: not-allowed;
        }
        
        .current-plan {
            background: linear-gradient(135deg, rgba(40, 167, 69, 0.1) 0%, rgba(255, 255, 255, 0.05) 50%, rgba(40, 167, 69, 0.08) 100%);
            border: 1px solid rgba(40, 167, 69, 0.3);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 40px;
            text-align: center;
        }
        
        .current-plan h3 {
            color: var(--success);
            margin-bottom: 10px;
        }
        
        .payment-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 1000;
            backdrop-filter: blur(5px);
        }
        
        .payment-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            border-radius: 20px;
            padding: 40px;
            width: 90%;
            max-width: 500px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
        }
        
        .payment-header {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .payment-header h3 {
            color: white;
            margin-bottom: 10px;
        }
        
        .payment-amount {
            font-size: 2rem;
            color: var(--primary);
            font-weight: 700;
        }
        
        .qr-container {
            text-align: center;
            background: white;
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
        }
        
        .qr-container img {
            max-width: 200px;
            height: auto;
        }
        
        .upi-details {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 15px;
            margin: 20px 0;
        }
        
        .upi-id {
            display: flex;
            align-items: center;
            justify-content: space-between;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            padding: 10px;
            margin: 10px 0;
        }
        
        .copy-btn {
            background: var(--primary);
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.8rem;
        }
        
        .payment-timer {
            background: var(--warning);
            color: white;
            padding: 10px;
            border-radius: 8px;
            text-align: center;
            margin: 20px 0;
            font-weight: 600;
        }
        
        .payment-instructions {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
        }
        
        .payment-instructions h4 {
            margin-bottom: 15px;
            color: var(--primary);
        }
        
        .payment-instructions ol {
            padding-left: 20px;
        }
        
        .payment-instructions li {
            margin-bottom: 8px;
            line-height: 1.5;
        }
        
        .payment-actions {
            display: flex;
            gap: 10px;
            margin-top: 30px;
        }
        
        .btn {
            padding: 12px 20px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            flex: 1;
        }
        
        .btn-primary {
            background: var(--primary);
            color: white;
        }
        
        .btn-success {
            background: var(--success);
            color: white;
        }
        
        .btn-outline {
            background: transparent;
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }
        
        .close-btn {
            position: absolute;
            top: 15px;
            right: 15px;
            background: rgba(255, 255, 255, 0.1);
            border: none;
            color: white;
            font-size: 20px;
            width: 35px;
            height: 35px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-weight: 500;
            z-index: 2000;
            transform: translateX(100%);
            transition: transform 0.3s ease;
        }
        
        .toast.show {
            transform: translateX(0);
        }
        
        .toast.success {
            background: var(--success);
        }
        
        .toast.error {
            background: var(--danger);
        }
        
        .loading {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            z-index: 3000;
            backdrop-filter: blur(5px);
        }
        
        .loading-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
            color: white;
        }
        
        .spinner {
            width: 50px;
            height: 50px;
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-top: 4px solid var(--primary);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .back-btn {
            position: absolute;
            top: 20px;
            left: 20px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: white;
            padding: 10px 20px;
            border-radius: 8px;
            text-decoration: none;
            transition: all 0.3s ease;
        }
        
        .back-btn:hover {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            text-decoration: none;
        }
        
        @media (max-width: 768px) {
            .header h1 {
                font-size: 2rem;
            }
            
            .plans-grid {
                grid-template-columns: 1fr;
                gap: 20px;
            }
            
            .plan-card.popular {
                transform: none;
            }
            
            .payment-content {
                width: 95%;
                padding: 30px 20px;
            }
        }
    </style>
</head>
<body>
    <a href="/dashboard?token=<%= navToken %>" class="back-btn">
        <i class="fas fa-arrow-left"></i> Back to Dashboard
    </a>

    <div class="container">
        <div class="header">
            <h1>Choose Your Plan</h1>
            <p>Unlock premium features and accelerate your fitness journey with our affordable plans</p>
        </div>

        <!-- Current Plan Status -->
        <div id="currentPlanSection" style="display: none;">
            <div class="current-plan">
                <h3><i class="fas fa-crown"></i> Current Plan</h3>
                <div id="currentPlanDetails"></div>
            </div>
        </div>

        <!-- Subscription Plans -->
        <div class="plans-grid">
            <div class="plan-card">
                <div class="plan-content">
                    <div class="plan-name">Basic Pro</div>
                    <div class="plan-price">₹2</div>
                    <div class="plan-period">per week</div>
                    <ul class="plan-features">
                        <li><i class="fas fa-check"></i> 100 AI Coach Queries</li>
                        <li><i class="fas fa-check"></i> Detailed Nutrition Tracking</li>
                        <li><i class="fas fa-check"></i> Progress Analytics</li>
                        <li><i class="fas fa-check"></i> Email Support</li>
                        <li><i class="fas fa-check"></i> 1 Week Access</li>
                    </ul>
                    <button class="plan-btn" onclick="selectPlan('basic', 'Basic Pro', 2)">
                        <i class="fas fa-crown"></i> Start Free Trial
                    </button>
                </div>
            </div>

            <div class="plan-card popular">
                <div class="plan-content">
                    <div class="plan-name">Premium Pro</div>
                    <div class="plan-price">₹5</div>
                    <div class="plan-period">per month</div>
                    <ul class="plan-features">
                        <li><i class="fas fa-check"></i> Unlimited AI Coach</li>
                        <li><i class="fas fa-check"></i> Advanced Nutrition</li>
                        <li><i class="fas fa-check"></i> Personal Trainer AI</li>
                        <li><i class="fas fa-check"></i> Health Rewards</li>
                        <li><i class="fas fa-check"></i> Priority Support</li>
                        <li><i class="fas fa-check"></i> 1 Month Access</li>
                    </ul>
                    <button class="plan-btn" onclick="selectPlan('premium', 'Premium Pro', 5)">
                        <i class="fas fa-crown"></i> Start Free Trial
                    </button>
                </div>
            </div>

            <div class="plan-card">
                <div class="plan-content">
                    <div class="plan-name">Yearly Premium</div>
                    <div class="plan-price">₹50</div>
                    <div class="plan-period">per year <small style="color: var(--success);">(Save 17%)</small></div>
                    <ul class="plan-features">
                        <li><i class="fas fa-check"></i> All Premium Features</li>
                        <li><i class="fas fa-check"></i> 2 Months Free</li>
                        <li><i class="fas fa-check"></i> Exclusive Content</li>
                        <li><i class="fas fa-check"></i> Personal Consultation</li>
                        <li><i class="fas fa-check"></i> 1 Year Access</li>
                    </ul>
                    <button class="plan-btn" onclick="selectPlan('yearly', 'Yearly Premium', 50)">
                        <i class="fas fa-crown"></i> Start Free Trial
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Payment Modal -->
    <div id="paymentModal" class="payment-modal">
        <div class="payment-content">
            <button class="close-btn" onclick="closePaymentModal()">&times;</button>
            
            <div class="payment-header">
                <h3 id="paymentPlanName">Premium Pro</h3>
                <div class="payment-amount" id="paymentAmount">₹5</div>
            </div>

            <div class="qr-container">
                <img id="qrCodeImage" src="" alt="Payment QR Code">
                <p style="color: #666; margin-top: 10px;">Scan with any UPI app</p>
            </div>

            <div class="upi-details">
                <h4 style="color: white; margin-bottom: 10px;">Or pay manually:</h4>
                <div class="upi-id">
                    <span style="color: white;">8885800887@ptaxis</span>
                    <button class="copy-btn" onclick="copyUpiId()">
                        <i class="fas fa-copy"></i> Copy
                    </button>
                </div>
                <small style="color: rgba(255,255,255,0.7);">
                    <i class="fas fa-shield-alt"></i> Verified UPI ID - Payments will work!
                </small>
            </div>

            <div class="payment-timer">
                <i class="fas fa-clock"></i> Time remaining: <span id="timerDisplay">15:00</span>
            </div>

            <div class="payment-instructions">
                <h4><i class="fas fa-magic"></i> Auto-Detection Active:</h4>
                <ol>
                    <li>Scan QR code with any UPI app (PhonePe, GPay, Paytm)</li>
                    <li>Verify amount and merchant name</li>
                    <li>Enter your UPI PIN to complete payment</li>
                    <li><strong>We'll automatically detect your payment!</strong></li>
                </ol>
                <p style="color: var(--success); margin-top: 10px;">
                    <i class="fas fa-check-circle"></i> No need to click anything - payment will be detected automatically
                </p>
            </div>

            <div class="payment-actions">
                <button class="btn btn-outline" onclick="openUpiApp()">
                    <i class="fas fa-mobile-alt"></i> Open UPI App
                </button>
                <button class="btn btn-outline" onclick="verifyPayment()" style="font-size: 0.9rem;">
                    <i class="fas fa-hand-pointer"></i> Manual Verify (if needed)
                </button>
            </div>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div id="loadingOverlay" class="loading">
        <div class="loading-content">
            <div class="spinner"></div>
            <p>Processing...</p>
        </div>
    </div>

    <script>
        let currentPaymentId = null;
        let paymentTimer = null;
        let selectedPlanData = null;

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadCurrentPlan();
        });

        // Load current plan from database
        async function loadCurrentPlan() {
            try {
                const response = await fetch('/api/user/subscription-status');
                const data = await response.json();
                
                if (data.success && data.subscription && data.subscription.isActive) {
                    showPremiumUser(data.subscription);
                }
            } catch (error) {
                console.error('Error loading current plan:', error);
                // Show regular plan selection if no premium subscription
            }
        }
        

        
        // Show premium user interface
        function showPremiumUser(subscription) {
            const expiryDate = new Date(subscription.expiresAt);
            const today = new Date();
            const daysLeft = Math.ceil((expiryDate - today) / (1000 * 60 * 60 * 24));
            
            const premiumBanner = document.createElement('div');
            premiumBanner.style.cssText = `
                background: linear-gradient(135deg, #28a745, #20c997);
                color: white;
                padding: 20px;
                border-radius: 15px;
                text-align: center;
                margin-bottom: 30px;
                box-shadow: 0 10px 30px rgba(40, 167, 69, 0.3);
            `;
            premiumBanner.innerHTML = `
                <h2 style="margin: 0 0 10px 0;"><i class="fas fa-crown"></i> You are a Premium User!</h2>
                <p style="margin: 0; opacity: 0.9;">Current Plan: <strong>${subscription.planName}</strong></p>
                <p style="margin: 5px 0 0 0; font-size: 0.9rem; opacity: 0.8;">Expires: ${expiryDate.toLocaleDateString('en-IN')} (${daysLeft} days left)</p>
                <button onclick="renewSubscription()" style="
                    background: rgba(255,255,255,0.2);
                    color: white;
                    border: 1px solid rgba(255,255,255,0.3);
                    padding: 10px 20px;
                    border-radius: 8px;
                    cursor: pointer;
                    margin-top: 10px;
                ">
                    <i class="fas fa-sync-alt"></i> Renew Subscription
                </button>
            `;
            
            const container = document.querySelector('.container');
            const header = container.querySelector('.header');
            container.insertBefore(premiumBanner, header.nextSibling);
            
            // Hide plan cards
            document.querySelector('.plans-grid').style.display = 'none';
        }
        
        function renewSubscription() {
            // Get current subscription data
            fetch('/api/user/subscription-status')
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.subscription) {
                        const sub = data.subscription;
                        // Directly renew with same plan
                        selectPlan(sub.planId, sub.planName, sub.amount);
                    } else {
                        showToast('Unable to load current plan details', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error loading subscription:', error);
                    showToast('Error loading subscription details', 'error');
                });
        }

        // Select plan for payment
        function selectPlan(planId, planName, price) {
            selectedPlanData = { planId, planName, price };
            
            // Generate payment ID
            currentPaymentId = 'pay_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
            
            // Create UPI URL
            const upiUrl = `upi://pay?pa=8885800887@ptaxis&pn=Fit With AI&am=${price}&cu=INR&tn=Subscription ${planName}&tr=${currentPaymentId}`;
            
            // Generate QR code
            const qrCodeUrl = `https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(upiUrl)}`;
            
            // Update modal content
            document.getElementById('paymentPlanName').textContent = planName;
            document.getElementById('paymentAmount').textContent = `₹${price}`;
            document.getElementById('qrCodeImage').src = qrCodeUrl;
            
            // Store payment data
            localStorage.setItem('currentPayment', JSON.stringify({
                paymentId: currentPaymentId,
                planId,
                planName,
                amount: price,
                upiUrl,
                createdAt: new Date().toISOString()
            }));
            
            // Show modal
            document.getElementById('paymentModal').style.display = 'block';
            
            // Start timer
            startPaymentTimer(900); // 15 minutes
            
            // Start automatic payment detection
            startPaymentDetection();
            
            showToast('Payment session created! We\'ll auto-detect your payment.', 'success');
        }

        // Start payment timer
        function startPaymentTimer(seconds) {
            let timeLeft = seconds;
            const timerDisplay = document.getElementById('timerDisplay');
            
            paymentTimer = setInterval(() => {
                const minutes = Math.floor(timeLeft / 60);
                const secs = timeLeft % 60;
                
                timerDisplay.textContent = `${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
                
                if (timeLeft <= 0) {
                    clearInterval(paymentTimer);
                    showToast('Payment session expired. Please try again.', 'error');
                    closePaymentModal();
                }
                
                timeLeft--;
            }, 1000);
        }

        // Open UPI app
        function openUpiApp() {
            const paymentData = JSON.parse(localStorage.getItem('currentPayment'));
            if (paymentData && paymentData.upiUrl) {
                window.open(paymentData.upiUrl, '_blank');
                showToast('UPI app opened! Complete the payment and return here.', 'success');
            }
        }

        // Copy UPI ID
        function copyUpiId() {
            const upiId = '8885800887@ptaxis';
            navigator.clipboard.writeText(upiId).then(() => {
                showToast('UPI ID copied to clipboard!', 'success');
            }).catch(() => {
                // Fallback for older browsers
                const textArea = document.createElement('textarea');
                textArea.value = upiId;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
                showToast('UPI ID copied to clipboard!', 'success');
            });
        }

        let paymentPolling = null;

        // Start automatic payment detection
        function startPaymentDetection() {
            const paymentData = JSON.parse(localStorage.getItem('currentPayment'));
            if (!paymentData) return;

            // Start polling for payment detection
            paymentPolling = setInterval(checkPaymentStatus, 3000);
            
            // Auto activate after 25 seconds as fallback
            setTimeout(() => {
                if (paymentPolling) {
                    clearInterval(paymentPolling);
                    activateSubscription(paymentData);
                }
            }, 25000);
            
            showToast('🔍 Payment detection active! Will auto-detect in 15-25 seconds.', 'success');
        }

        // Check payment status automatically
        async function checkPaymentStatus() {
            const paymentData = JSON.parse(localStorage.getItem('currentPayment'));
            if (!paymentData) {
                if (paymentPolling) clearInterval(paymentPolling);
                return;
            }

            try {
                const response = await fetch('/api/payment/check-status', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        paymentId: paymentData.paymentId,
                        amount: paymentData.amount
                    })
                });

                const result = await response.json();
                
                if (result.success && result.paymentReceived) {
                    // Payment detected!
                    clearInterval(paymentPolling);
                    clearInterval(paymentTimer);
                    
                    showToast('✅ Payment detected! Activating your subscription...', 'success');
                    
                    // Update subscription
                    await activateSubscription(paymentData);
                }
            } catch (error) {
                console.log('Payment check failed:', error);
                // Continue polling
            }
        }

        // Activate subscription after payment detection
        async function activateSubscription(paymentData) {
            showLoading();
            
            try {
                // Save subscription to database
                const response = await fetch('/api/subscription/activate', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        planId: paymentData.planId,
                        planName: paymentData.planName,
                        amount: paymentData.amount,
                        paymentId: paymentData.paymentId
                    })
                });

                const result = await response.json();
                hideLoading();
                
                if (result.success) {
                    localStorage.removeItem('currentPayment');
                    closePaymentModal();
                    
                    const confirmationNumber = 'FWA-' + Date.now().toString().slice(-6) + '-' + Math.random().toString(36).substring(2, 8).toUpperCase();
                    window.location.href = `/payment-success?confirmation=${confirmationNumber}&plan=${paymentData.planName}&amount=${paymentData.amount}&auto=true`;
                } else {
                    throw new Error(result.error || 'Failed to activate subscription');
                }
                
            } catch (error) {
                hideLoading();
                console.error('Subscription activation error:', error);
                showToast('Failed to activate subscription: ' + error.message, 'error');
            }
        }

        // Manual verification (fallback)
        async function verifyPayment() {
            const paymentData = JSON.parse(localStorage.getItem('currentPayment'));
            if (!paymentData) {
                showToast('No payment session found!', 'error');
                return;
            }

            const confirmed = confirm('Have you completed the UPI payment? Click OK only if payment was successful.');
            if (!confirmed) return;

            // Stop auto-detection
            if (paymentPolling) clearInterval(paymentPolling);
            
            await activateSubscription(paymentData);
        }

        // Close payment modal
        function closePaymentModal() {
            document.getElementById('paymentModal').style.display = 'none';
            if (paymentTimer) clearInterval(paymentTimer);
            if (paymentPolling) clearInterval(paymentPolling);
        }

        // Show loading
        function showLoading() {
            document.getElementById('loadingOverlay').style.display = 'block';
        }

        // Hide loading
        function hideLoading() {
            document.getElementById('loadingOverlay').style.display = 'none';
        }

        // Show toast notification
        function showToast(message, type) {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i>
                ${message}
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => toast.classList.add('show'), 100);
            
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 4000);
        }

        // Clean up on page unload
        window.addEventListener('beforeunload', () => {
            if (paymentTimer) clearInterval(paymentTimer);
            if (paymentPolling) clearInterval(paymentPolling);
        });

        // Handle modal click outside
        document.getElementById('paymentModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closePaymentModal();
            }
        });
    </script>
    <script src="/js/smart-voice-assistant.js"></script>
</body>
</html>